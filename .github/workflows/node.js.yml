# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions


name: build.sh

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      input:
        description: "Test"
        required: false
        default: "World"

jobs:

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install
        run: apt-get update && apt-get install -y tzdata

      - name: Configure
        run: ln -fs /usr/share/zoneinfo/Europe/Paris /etc/localtime && dpkg-reconfigure --frontend noninteractive tzdata
       
      # Runs a single command using the runners shell
      - name: build
        env:
          mykey : pippo
        run: ./build.sh
        #run: docker buildx build -f Dockerfile.test -t chartjs-renderer:test --output coverage .

      - name: Publish charts
        uses: actions/upload-artifact@v3 #2
        if: always()
        with:
          path: |
            charts.tar.gz
            coverage.tar.gz
          name: coverage

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        if: always()
        run: |
          printenv
          node --version
          uname --all

      #- name: Publish Coverage Results
      #  uses: romeovs/lcov-reporter-action@v0.2.16
      #  if: always()
      #  with:
      #    lcov-file: ./coverage/lcov.info
      
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            ./coverage/test-result.json


