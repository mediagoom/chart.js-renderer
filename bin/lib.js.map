{"version":3,"file":"lib.js","mappings":"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","sources":["../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object",".././node_modules/red-agate-util/src/convert/TextEncoding.ts",".././node_modules/red-agate-util/src/convert/Escape.ts",".././node_modules/red-agate-util/src/convert/WordWrap.ts",".././node_modules/red-agate-svg-canvas/src/drawing/canvas/WebColor.ts",".././node_modules/red-agate-svg-canvas/src/drawing/canvas/TransferMatrix2D.ts",".././node_modules/red-agate-util/src/convert/NumberPrecision.ts",".././node_modules/red-agate-svg-canvas/src/drawing/canvas/SvgCanvas.ts",".././node_modules/red-agate-util/src/convert/Base64.ts",".././src/lib.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// src/convert/TextEncoding.ts#__encodeToUtf8Impl\r\n//\r\n// Original Author:\r\n// http://qiita.com/ukyo/items/1626defd020b2157e6bf\r\n// (c) 2012 ukyo (http://qiita.com/ukyo, https://ukyoweb.com)\r\n\r\n// src/convert/TextEncoding.ts#__decodeUtf8Impl\r\n//\r\n// Original Author:\r\n// http://www.onicos.com/staff/iz/amuse/javascript/expert/utf.txt\r\n// utf.js - UTF-8 <=> UTF-16 convertion\r\n// Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\r\n// Version: 1.0\r\n// LastModified: Dec 25 1999\r\n// This library is free.  You can redistribute it and/or modify it.\r\n\r\n// Copyright (c) 2017, Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\ninterface TextEncoder {\r\n    encoding: string; // readonly\r\n    encode(input?: string): Uint8Array;\r\n}\r\n\r\ndeclare var TextEncoder: {\r\n    prototype: TextEncoder;\r\n    new (utfLabel?: string): TextEncoder;\r\n};\r\n\r\n\r\ninterface TextDecoder {\r\n    encoding: string;\r\n    fatal: boolean;\r\n    ignoreBOM: boolean;\r\n    decode(input?: any, options?: object): string;\r\n}\r\n\r\ndeclare var TextDecoder: {\r\n    prototype: TextDecoder;\r\n    new (label?: string, options?: object): TextDecoder;\r\n};\r\n\r\n\r\n\r\nexport class TextEncoding {\r\n    private static isNode: boolean;\r\n    private static isTextEncoder: boolean;\r\n    private static utf8Encoder: TextEncoder;\r\n    private static utfDecoder: TextDecoder;\r\n\r\n    // tslint:disable-next-line:variable-name\r\n    private static __encodeToUtf8: (str: string) => Uint8Array;\r\n\r\n    // tslint:disable-next-line:variable-name\r\n    private static __decodeUtf8: (buf: ArrayLike<number>) => string;\r\n\r\n    /** static constructor */\r\n    // tslint:disable-next-line:variable-name\r\n    private static __ctor = (() => {\r\n        TextEncoding.isNode = (typeof Buffer !== \"undefined\");\r\n        TextEncoding.isTextEncoder = (typeof TextEncoder !== \"undefined\");\r\n\r\n        if (TextEncoding.isNode) {\r\n            TextEncoding.__encodeToUtf8 = (str: string) => Buffer.from(str, \"utf8\");\r\n            TextEncoding.__decodeUtf8 = (buf: ArrayLike<number>) => Buffer.from(Array.isArray(buf) ? buf : Array.from(buf)).toString(\"utf8\");\r\n        } else if (TextEncoding.isTextEncoder) {\r\n            TextEncoding.utf8Encoder = new TextEncoder(\"utf8\");\r\n            TextEncoding.__encodeToUtf8 = (str: string) => TextEncoding.utf8Encoder.encode(str);\r\n            TextEncoding.utfDecoder = new TextDecoder(\"utf8\");\r\n            TextEncoding.__decodeUtf8 = (buf: ArrayLike<number>) => TextEncoding.utfDecoder.decode(buf);\r\n        } else {\r\n            TextEncoding.__encodeToUtf8 = TextEncoding.__encodeToUtf8Impl;\r\n            TextEncoding.__decodeUtf8 = TextEncoding.__decodeUtf8Impl;\r\n        }\r\n    })();\r\n\r\n    public static encodeToUtf8(str: string): Uint8Array {\r\n        return TextEncoding.__encodeToUtf8(str);\r\n    }\r\n\r\n    public static decodeUtf8(buf: ArrayLike<number>): string {\r\n        return TextEncoding.__decodeUtf8(buf);\r\n    }\r\n\r\n    private static __encodeToUtf8Impl(str: string): Uint8Array {\r\n\r\n        // Original Author:\r\n        // http://qiita.com/ukyo/items/1626defd020b2157e6bf\r\n        // (c) 2012 ukyo (http://qiita.com/ukyo, https://ukyoweb.com)\r\n\r\n        // NOTE: We have modified from original source.\r\n\r\n        const n = str.length;\r\n        let idx = -1,\r\n            byteLength = 512,\r\n            bytes = new Uint8Array(byteLength),\r\n            i: number, c: number;\r\n\r\n        for (i = 0; i < n; ++i) {\r\n            // surrogate pairs (U+D800..U+DFFF) should be decoded to U+010000..U+10FFFF\r\n            // before convert to UTF-8.\r\n            const cp = str.codePointAt(i);\r\n            if (cp === void 0) {\r\n                throw new Error(\"Can't convert string to UTF-8. string include unexpected sequence.\");\r\n            }\r\n            c = cp;\r\n            if (c <= 0x7F) {\r\n                bytes[++idx] = c;\r\n            } else if (c <= 0x7FF) {\r\n                bytes[++idx] = 0xC0 | (c >>>  6)         ;\r\n                bytes[++idx] = 0x80 | (c & 0x3F)         ;\r\n            } else if (c <= 0xFFFF) {\r\n                bytes[++idx] = 0xE0 |  (c >>> 12)        ;\r\n                bytes[++idx] = 0x80 | ((c >>>  6) & 0x3F);\r\n                bytes[++idx] = 0x80 |  (c & 0x3F)        ;\r\n            } else if (c <= 0x10FFFF) {\r\n                // UTF-8 4bytes range is (0x010000..0x1FFFFF) but Unicode codepoint uses <= U+10FFFF.\r\n                bytes[++idx] = 0xF0 |  (c >>> 18)        ;\r\n                bytes[++idx] = 0x80 | ((c >>> 12) & 0x3F);\r\n                bytes[++idx] = 0x80 | ((c >>>  6) & 0x3F);\r\n                bytes[++idx] = 0x80 |  (c & 0x3F)        ;\r\n                if (0x010000 <= c) ++i;\r\n            } else {\r\n                throw new Error(\"Can't convert string to UTF-8. string include unexpected sequence.\");\r\n            }\r\n            if (byteLength - idx <= 4) {\r\n                // tslint:disable-next-line:variable-name\r\n                const _bytes = bytes;\r\n                byteLength *= 2;\r\n                bytes = new Uint8Array(byteLength);\r\n                bytes.set(_bytes);\r\n            }\r\n        }\r\n        return bytes.subarray(0, ++idx);\r\n    }\r\n\r\n    private static __decodeUtf8Impl(buf: ArrayLike<number>): string {\r\n\r\n        // Original Author:\r\n        // http://www.onicos.com/staff/iz/amuse/javascript/expert/utf.txt\r\n        // utf.js - UTF-8 <=> UTF-16 convertion\r\n        // Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\r\n        // Version: 1.0\r\n        // LastModified: Dec 25 1999\r\n        // This library is free.  You can redistribute it and/or modify it.\r\n\r\n        // NOTE: We have modified from original source.\r\n\r\n        let   out = \"\", i = 0;\r\n        const len = buf.length;\r\n        let c: number, char2: number, char3: number, char4: number;\r\n\r\n        while (i < len) {\r\n            c = buf[i++];\r\n            switch (c >>> 4) {\r\n            case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\r\n                // 0xxx xxxx    ( 7bit)\r\n                out += String.fromCodePoint(c);\r\n                break;\r\n            case 12: case 13:\r\n                // 110x xxxx,  10xx xxxx    (11bit)\r\n                char2 = buf[i++];\r\n                out += String.fromCodePoint(\r\n                        ((c     & 0x1F) << 6) |\r\n                         (char2 & 0x3F)\r\n                        );\r\n                break;\r\n            case 14:\r\n                // 1110 xxxx,  10xx xxxx,  10xx xxxx    (16bit)\r\n                char2 = buf[i++];\r\n                char3 = buf[i++];\r\n                out += String.fromCodePoint(\r\n                        ((c     & 0x0F) << 12) |\r\n                        ((char2 & 0x3F) <<  6) |\r\n                        ((char3 & 0x3F) <<  0)\r\n                        );\r\n                break;\r\n            case 16:\r\n                // 1111 0xxx,  10xx xxxx,  10xx xxxx,  10xx xxxx                            (21bit)\r\n                // 1111 10xx,  10xx xxxx,  10xx xxxx,  10xx xxxx,  10xx xxxx                (26bit; invalid Unicode codepoint)\r\n                // 1111 110x,  10xx xxxx,  10xx xxxx,  10xx xxxx,  10xx xxxx,  10xx xxxx    (31bit; invalid Unicode codepoint)\r\n                if ((c >>> 3) & 1) {\r\n                    throw new Error(\"Can't convert UTF-8 to string. UTF-8 include unexpected sequence.\");\r\n                }\r\n                char2 = buf[i++];\r\n                char3 = buf[i++];\r\n                char4 = buf[i++];\r\n                out += String.fromCodePoint(\r\n                        ((c     & 0x07) << 18) |\r\n                        ((char2 & 0x3F) << 12) |\r\n                        ((char3 & 0x3F) <<  6) |\r\n                        ((char4 & 0x3F) <<  0)\r\n                        );\r\n                break;\r\n            }\r\n        }\r\n\r\n        return out;\r\n    }\r\n}\r\n","// Copyright (c) 2017, Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\n/**\r\n * Escape sequences encoder.\r\n */\r\nexport class Escape {\r\n\r\n    /**\r\n     * Escape html special characters.\r\n     * @param s Plaintext.\r\n     * @return Html escaped text.\r\n     */\r\n    public static html(s: string): string {\r\n        return s\r\n            .replace(/&/g, \"&amp;\")\r\n            .replace(/</g, \"&lt;\")\r\n            .replace(/>/g, \"&gt;\")\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/'/g, \"&#39;\");\r\n    }\r\n\r\n    /**\r\n     * Escape xml special characters.\r\n     * @param s Plaintext.\r\n     * @return Xml escaped text.\r\n     */\r\n    public static xml(s: string): string {\r\n        return s\r\n            .replace(/&/g, \"&amp;\")\r\n            .replace(/</g, \"&lt;\")\r\n            .replace(/>/g, \"&gt;\")\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/'/g, \"&apos;\");\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Escape sequences decoder.\r\n */\r\nexport class Unescape {\r\n\r\n    /**\r\n     * Unescape html character references.\r\n     * @param s Html escaped text.\r\n     * @return Plaintext.\r\n     */\r\n    public static html(s: string): string {\r\n        return s\r\n            .replace(/&#39;/g, \"'\")\r\n            .replace(/&#x(?:0{0,2})27;/ig, \"'\")\r\n            .replace(/&apos;/g, \"'\")\r\n\r\n            .replace(/&#34;/g, \"\\\"\")\r\n            .replace(/&#x(?:0{0,2})22;/ig, \"\\\"\")\r\n            .replace(/&quot;/g, \"\\\"\")\r\n\r\n            .replace(/&#62;/g, \">\")\r\n            .replace(/&#x(?:0{0,2})3e;/ig, \">\")\r\n            .replace(/&gt;/g, \">\")\r\n\r\n            .replace(/&#60;/g, \"<\")\r\n            .replace(/&#x(?:0{0,2})3c;/ig, \"<\")\r\n            .replace(/&lt;/g, \"<\")\r\n\r\n            .replace(/&#38;/g, \"&\")\r\n            .replace(/&#x(?:0{0,2})26;/ig, \"&\")\r\n            .replace(/&amp;/g, \"&\");\r\n    }\r\n\r\n    /**\r\n     * Unescape xml character references.\r\n     * @param s Xml escaped text.\r\n     * @return Plaintext.\r\n     */\r\n    public static xml(s: string): string {\r\n        return Escape.html(s);\r\n    }\r\n\r\n}\r\n","// Copyright (c) 2017, Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport class WordWrap {\r\n\r\n    public static loose(str: string, charsPerLine: number = 120): string {\r\n        let r = \"\";\r\n        let i = 0;\r\n        for (const c of str) {\r\n            i++;\r\n            if (i >= charsPerLine && \" \\f\\t\\v\".indexOf(c) > -1) {\r\n                r += \"\\n\";\r\n                i = 0;\r\n            } else {\r\n                r += c;\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n\r\n    public static normal(str: string, charsPerLine: number = 120): string {\r\n        // TODO: not implemented.\r\n        //       do normal word-wrap.\r\n        return WordWrap.loose(str, charsPerLine);\r\n    }\r\n\r\n    public static force(str: string, charsPerLine: number = 120): string {\r\n        // TODO: not implemented.\r\n        //       do break-word word-wrap.\r\n        return WordWrap.loose(str, charsPerLine);\r\n    }\r\n\r\n}\r\n","// Copyright (c) 2017, Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport class WebColor {\r\n    private static colorNames = new Map<string, {r: number, g: number, b: number}>([\r\n        [\"red\"                 , {r: 255, g:   0, b:   0}],\r\n        [\"darkred\"             , {r: 139, g:   0, b:   0}],\r\n        [\"maroon\"              , {r: 128, g:   0, b:   0}],\r\n        [\"brown\"               , {r: 165, g:  42, b:  42}],\r\n        [\"firebrick\"           , {r: 178, g:  34, b:  34}],\r\n        [\"sienna\"              , {r: 160, g:  82, b:  45}],\r\n        [\"saddlebrown\"         , {r: 139, g:  69, b:  19}],\r\n        [\"peru\"                , {r: 205, g: 133, b:  63}],\r\n        [\"indianred\"           , {r: 205, g:  92, b:  92}],\r\n        [\"rosybrown\"           , {r: 188, g: 143, b: 143}],\r\n        [\"lightcoral\"          , {r: 240, g: 128, b: 128}],\r\n        [\"salmon\"              , {r: 250, g: 128, b: 114}],\r\n        [\"darksalmon\"          , {r: 233, g: 150, b: 122}],\r\n        [\"coral\"               , {r: 255, g: 127, b:  80}],\r\n        [\"tomato\"              , {r: 255, g:  99, b:  71}],\r\n        [\"sandybrown\"          , {r: 244, g: 164, b:  96}],\r\n        [\"lightsalmon\"         , {r: 255, g: 160, b: 122}],\r\n        [\"chocolate\"           , {r: 210, g: 105, b:  30}],\r\n        [\"orangered\"           , {r: 255, g:  69, b:   0}],\r\n        [\"orange\"              , {r: 255, g: 165, b:   0}],\r\n        [\"darkorange\"          , {r: 255, g: 140, b:   0}],\r\n        [\"tan\"                 , {r: 210, g: 180, b: 140}],\r\n        [\"peachpuff\"           , {r: 255, g: 218, b: 185}],\r\n        [\"bisque\"              , {r: 255, g: 228, b: 196}],\r\n        [\"moccasin\"            , {r: 255, g: 228, b: 181}],\r\n        [\"navajowhite\"         , {r: 255, g: 222, b: 173}],\r\n        [\"wheat\"               , {r: 245, g: 222, b: 179}],\r\n        [\"burlywood\"           , {r: 222, g: 184, b: 135}],\r\n        [\"darkgoldenrod\"       , {r: 184, g: 134, b:  11}],\r\n        [\"goldenrod\"           , {r: 218, g: 165, b:  32}],\r\n        [\"gold\"                , {r: 255, g: 215, b:   0}],\r\n        [\"yellow\"              , {r: 255, g: 255, b:   0}],\r\n        [\"lightgoldenrodyellow\", {r: 250, g: 250, b: 210}],\r\n        [\"palegoldenrod\"       , {r: 238, g: 232, b: 170}],\r\n        [\"khaki\"               , {r: 240, g: 230, b: 140}],\r\n        [\"darkkhaki\"           , {r: 189, g: 183, b: 107}],\r\n        [\"blanchedalmond\"      , {r: 255, g: 235, b: 205}],\r\n        [\"lightyellow\"         , {r: 255, g: 255, b: 224}],\r\n        [\"cornsilk\"            , {r: 255, g: 248, b: 220}],\r\n        [\"antiquewhite\"        , {r: 250, g: 235, b: 215}],\r\n        [\"papayawhip\"          , {r: 255, g: 239, b: 213}],\r\n        [\"papayawhite\"         , {r: 255, g: 239, b: 213}],\r\n        [\"lemonchiffon\"        , {r: 255, g: 250, b: 205}],\r\n        [\"beige\"               , {r: 245, g: 245, b: 220}],\r\n        [\"oldlace\"             , {r: 253, g: 245, b: 230}],\r\n        [\"lightcyan\"           , {r: 224, g: 255, b: 255}],\r\n        [\"aliceblue\"           , {r: 240, g: 248, b: 255}],\r\n        [\"whitesmoke\"          , {r: 245, g: 245, b: 245}],\r\n        [\"lavenderblush\"       , {r: 255, g: 240, b: 245}],\r\n        [\"floralwhite\"         , {r: 255, g: 250, b: 240}],\r\n        [\"mintcream\"           , {r: 245, g: 255, b: 250}],\r\n        [\"ghostwhite\"          , {r: 248, g: 248, b: 255}],\r\n        [\"honeydew\"            , {r: 240, g: 255, b: 240}],\r\n        [\"seashell\"            , {r: 255, g: 245, b: 238}],\r\n        [\"ivory\"               , {r: 255, g: 255, b: 240}],\r\n        [\"azure\"               , {r: 240, g: 255, b: 255}],\r\n        [\"snow\"                , {r: 255, g: 250, b: 250}],\r\n        [\"white\"               , {r: 255, g: 255, b: 255}],\r\n        [\"gainsboro\"           , {r: 220, g: 220, b: 220}],\r\n        [\"lightgrey\"           , {r: 211, g: 211, b: 211}],\r\n        [\"silver\"              , {r: 192, g: 192, b: 192}],\r\n        [\"darkgray\"            , {r: 169, g: 169, b: 169}],\r\n        [\"lightslategray\"      , {r: 119, g: 136, b: 153}],\r\n        [\"slategray\"           , {r: 112, g: 128, b: 144}],\r\n        [\"gray\"                , {r: 128, g: 128, b: 128}],\r\n        [\"dimgray\"             , {r: 105, g: 105, b: 105}],\r\n        [\"darkslategray\"       , {r:  47, g:  79, b:  79}],\r\n        [\"black\"               , {r:   0, g:   0, b:   0}],\r\n        [\"lawngreen\"           , {r: 124, g: 252, b:   0}],\r\n        [\"greenyellow\"         , {r: 173, g: 255, b:  47}],\r\n        [\"chartreuse\"          , {r: 127, g: 255, b:   0}],\r\n        [\"lime\"                , {r:   0, g: 255, b:   0}],\r\n        [\"limegreen\"           , {r:  50, g: 205, b:  50}],\r\n        [\"yellowgreen\"         , {r: 154, g: 205, b:  50}],\r\n        [\"olive\"               , {r: 128, g: 128, b:   0}],\r\n        [\"olivedrab\"           , {r: 107, g: 142, b:  35}],\r\n        [\"darkolivegreen\"      , {r:  85, g: 107, b:  47}],\r\n        [\"forestgreen\"         , {r:  34, g: 139, b:  34}],\r\n        [\"darkgreen\"           , {r:   0, g: 100, b:   0}],\r\n        [\"green\"               , {r:   0, g: 128, b:   0}],\r\n        [\"seagreen\"            , {r:  46, g: 139, b:  87}],\r\n        [\"mediumseagreen\"      , {r:  60, g: 179, b: 113}],\r\n        [\"darkseagreen\"        , {r: 143, g: 188, b: 143}],\r\n        [\"lightgreen\"          , {r: 144, g: 238, b: 144}],\r\n        [\"palegreen\"           , {r: 152, g: 251, b: 152}],\r\n        [\"springgreen\"         , {r:   0, g: 255, b: 127}],\r\n        [\"mediumspringgreen\"   , {r:   0, g: 250, b: 154}],\r\n        [\"teal\"                , {r:   0, g: 128, b: 128}],\r\n        [\"darkcyan\"            , {r:   0, g: 139, b: 139}],\r\n        [\"lightseagreen\"       , {r:  51, g: 153, b: 153}],\r\n        [\"mediumaquamarine\"    , {r: 102, g: 205, b: 170}],\r\n        [\"cadetblue\"           , {r:  95, g: 158, b: 160}],\r\n        [\"steelblue\"           , {r:  70, g: 130, b: 180}],\r\n        [\"aquamarine\"          , {r: 127, g: 255, b: 212}],\r\n        [\"powderblue\"          , {r: 176, g: 224, b: 230}],\r\n        [\"paleturquoise\"       , {r: 175, g: 238, b: 238}],\r\n        [\"lightblue\"           , {r: 173, g: 216, b: 230}],\r\n        [\"lightsteelblue\"      , {r: 176, g: 196, b: 222}],\r\n        [\"skyblue\"             , {r: 135, g: 206, b: 235}],\r\n        [\"lightskyblue\"        , {r: 135, g: 206, b: 250}],\r\n        [\"mediumturquoise\"     , {r:  72, g: 209, b: 204}],\r\n        [\"turquoise\"           , {r:  64, g: 224, b: 208}],\r\n        [\"darkturquoise\"       , {r:   0, g: 206, b: 209}],\r\n        [\"aqua\"                , {r:   0, g: 255, b: 255}],\r\n        [\"cyan\"                , {r:   0, g: 255, b: 255}],\r\n        [\"deepskyblue\"         , {r:   0, g: 191, b: 255}],\r\n        [\"dodgerblue\"          , {r:  30, g: 144, b: 255}],\r\n        [\"cornflowerblue\"      , {r: 100, g: 149, b: 237}],\r\n        [\"royalblue\"           , {r:  65, g: 105, b: 225}],\r\n        [\"blue\"                , {r:   0, g:   0, b: 255}],\r\n        [\"mediumblue\"          , {r:   0, g:   0, b: 205}],\r\n        [\"navy\"                , {r:   0, g:   0, b: 128}],\r\n        [\"darkblue\"            , {r:   0, g:   0, b: 139}],\r\n        [\"midnightblue\"        , {r:  25, g:  25, b: 112}],\r\n        [\"darkslateblue\"       , {r:  72, g:  61, b: 139}],\r\n        [\"mediumslateblue\"     , {r: 123, g: 104, b: 238}],\r\n        [\"slateblue\"           , {r: 106, g:  90, b: 205}],\r\n        [\"darkorchid\"          , {r: 153, g:  50, b: 204}],\r\n        [\"darkviolet\"          , {r: 148, g:   0, b: 211}],\r\n        [\"blueviolet\"          , {r: 138, g:  43, b: 226}],\r\n        [\"mediumorchid\"        , {r: 186, g:  85, b: 211}],\r\n        [\"plum\"                , {r: 221, g: 160, b: 221}],\r\n        [\"lavender\"            , {r: 230, g: 230, b: 250}],\r\n        [\"thistle\"             , {r: 216, g: 191, b: 216}],\r\n        [\"orchid\"              , {r: 218, g: 112, b: 214}],\r\n        [\"magenta\"             , {r: 255, g:   0, b: 255}],\r\n        [\"fuchsia\"             , {r: 255, g:   0, b: 255}],\r\n        [\"violet\"              , {r: 238, g: 130, b: 238}],\r\n        [\"indigo\"              , {r:  75, g:   0, b: 130}],\r\n        [\"darkmagenta\"         , {r: 139, g:   0, b: 139}],\r\n        [\"purple\"              , {r: 128, g:   0, b: 128}],\r\n        [\"mediumpurple\"        , {r: 147, g: 112, b: 219}],\r\n        [\"mediumvioletred\"     , {r: 199, g:  21, b: 133}],\r\n        [\"deeppink\"            , {r: 255, g:  20, b: 147}],\r\n        [\"hotpink\"             , {r: 255, g: 105, b: 180}],\r\n        [\"crimson\"             , {r: 220, g:  20, b:  60}],\r\n        [\"palevioletred\"       , {r: 219, g: 112, b: 147}],\r\n        [\"lightpink\"           , {r: 255, g: 182, b: 193}],\r\n        [\"pink\"                , {r: 255, g: 192, b: 203}],\r\n        [\"mistyrose\"           , {r: 255, g: 228, b: 225}]\r\n    ]);\r\n\r\n    /**\r\n     * red\r\n     */\r\n    // tslint:disable-next-line:variable-name\r\n    private _r: number = 0;\r\n\r\n    /**\r\n     * green\r\n     */\r\n    // tslint:disable-next-line:variable-name\r\n    private _g: number = 0;\r\n\r\n    /**\r\n     * blue\r\n     */\r\n    // tslint:disable-next-line:variable-name\r\n    private _b: number = 0;\r\n\r\n    /**\r\n     * alpha channel\r\n     */\r\n    // tslint:disable-next-line:variable-name\r\n    private _a: number = 1;\r\n\r\n    private static cutoff255(x: number) {\r\n        if (x < 0) return 0;\r\n        if (x > 255) return 255;\r\n        return x;\r\n    }\r\n\r\n    private static cutoff1(x: number) {\r\n        if (x < 0) return 0;\r\n        if (x > 1) return 1;\r\n        return x;\r\n    }\r\n\r\n    // tslint:disable-next-line:variable-name\r\n    constructor(name_or_code?: string | {r: number, g: number, b: number, a?: number} | {h: number, s: number, l: number, a?: number}) {\r\n        if (! name_or_code) return;\r\n\r\n        let rgba: {r: number, g: number, b: number, a: number} = {r: 0, g: 0, b: 0, a: 1};\r\n\r\n        if (typeof name_or_code === \"object\") {\r\n            if (name_or_code.hasOwnProperty(\"r\")) {\r\n                const c2 = name_or_code as {r: number, g: number, b: number, a?: number};\r\n                rgba = {\r\n                    r: WebColor.cutoff255(c2.r),\r\n                    g: WebColor.cutoff255(c2.g),\r\n                    b: WebColor.cutoff255(c2.b),\r\n                    a: WebColor.cutoff1(c2.a || 1)\r\n                };\r\n            } else if (name_or_code.hasOwnProperty(\"h\")) {\r\n                const hsla = name_or_code as {h: number, s: number, l: number, a?: number};\r\n                rgba = WebColor.hslToRgb(hsla.h, hsla.s, hsla.l, hsla.a || 1);\r\n            }\r\n        } else if (typeof name_or_code === \"string\") {\r\n            let c: {r: number, g: number, b: number, a?: number} | {h: number, s: number, l: number, a?: number} | boolean;\r\n\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            if (c = (WebColor.isCode(name_or_code) || WebColor.isName(name_or_code) || WebColor.isRgb(name_or_code))) {\r\n                const c2 = c as {r: number, g: number, b: number, a: number};\r\n                rgba = c2;\r\n            }\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            else if (c = WebColor.isHsl(name_or_code)) {\r\n                const hsla = c as {h: number, s: number, l: number, a?: number};\r\n                rgba = WebColor.hslToRgb(hsla.h, hsla.s, hsla.l, hsla.a);\r\n            }\r\n        }\r\n\r\n        this._r = rgba.r;\r\n        this._g = rgba.g;\r\n        this._b = rgba.b;\r\n        this._a = rgba.a;\r\n    }\r\n    public static isRgb(str: string): {r: number, g: number, b: number, a: number} | boolean {\r\n        let r: number, g: number, b: number, a = 1;\r\n        let match: RegExpMatchArray | null;\r\n\r\n        // tslint:disable-next-line:no-conditional-assignment\r\n        if (match = str.match(/^\\s*rgb(a?)\\(\\s*(-?(?:\\d+\\.)?\\d+%?)\\s*,\\s*(-?(?:\\d+\\.)?\\d+%?)\\s*,\\s*(-?(?:\\d+\\.)?\\d+%?)\\s*(?:,\\s*((?:[01]?\\.)?\\d+)\\s*)?\\)\\s*$/)) {\r\n            r = WebColor.cutoff255(match[2].endsWith(\"%\") ? Math.round(Number.parseFloat(match[2]) / 100 * 255) : Number.parseInt(match[2], 10));\r\n            g = WebColor.cutoff255(match[3].endsWith(\"%\") ? Math.round(Number.parseFloat(match[3]) / 100 * 255) : Number.parseInt(match[3], 10));\r\n            b = WebColor.cutoff255(match[4].endsWith(\"%\") ? Math.round(Number.parseFloat(match[4]) / 100 * 255) : Number.parseInt(match[4], 10));\r\n            if (match[1] === \"a\") {\r\n                a = WebColor.cutoff1(Number.parseFloat(match[5]));\r\n            }\r\n            return {r, g, b, a};\r\n        }\r\n        return false;\r\n    }\r\n    public static isHsl(str: string): {h: number, s: number, l: number, a: number} | boolean {\r\n        let h: number, s: number, l: number, a = 1;\r\n        let match: RegExpMatchArray | null;\r\n\r\n        // tslint:disable-next-line:no-conditional-assignment\r\n        if (match = str.match(/^\\s*hsl(a?)\\(\\s*(-?(?:\\d+\\.)?\\d+)\\s*,\\s*(-?(?:\\d+\\.)?\\d+%?)\\s*,\\s*(-?(?:\\d+\\.)?\\d+%?)\\s*,\\s*((?:[01]?\\.)?\\d+)\\s*\\)\\s*$/)) {\r\n            h = Number.parseFloat(match[2]) % 360;\r\n            if (h < 0) h = 360 - h;\r\n            s = WebColor.cutoff1(match[3].endsWith(\"%\") ? Math.round(Number.parseFloat(match[3]) / 100) : Number.parseFloat(match[3]));\r\n            l = WebColor.cutoff1(match[4].endsWith(\"%\") ? Math.round(Number.parseFloat(match[4]) / 100) : Number.parseFloat(match[4]));\r\n            if (match[1] === \"a\") {\r\n                a = WebColor.cutoff1(Number.parseFloat(match[5]));\r\n            }\r\n            return {h, s, l, a};\r\n        }\r\n        return false;\r\n    }\r\n    public static isCode(str: string): {r: number, g: number, b: number, a: number} | boolean {\r\n        let   r: number, g: number, b: number;\r\n        const a = 1;\r\n        let match: RegExpMatchArray | null;\r\n\r\n        // tslint:disable-next-line:no-conditional-assignment\r\n        if (match = str.match(/^\\s*#([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])\\s*$/)) {\r\n            r = Number.parseInt(`${match[1]}${match[1]}`, 16);\r\n            g = Number.parseInt(`${match[2]}${match[2]}`, 16);\r\n            b = Number.parseInt(`${match[3]}${match[3]}`, 16);\r\n            return {r, g, b, a};\r\n        }\r\n        // tslint:disable-next-line:no-conditional-assignment\r\n        else if (match = str.match(/^\\s*#([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})\\s*$/)) {\r\n            r = Number.parseInt(match[1], 16);\r\n            g = Number.parseInt(match[2], 16);\r\n            b = Number.parseInt(match[3], 16);\r\n            return {r, g, b, a};\r\n        }\r\n        return false;\r\n    }\r\n    public static isName(str: string): {r: number, g: number, b: number, a: number} | boolean {\r\n        if (WebColor.colorNames.has(str)) {\r\n            const c = WebColor.colorNames.get(str) as {r: number, g: number, b: number, a: number};\r\n            return {r: c.r, g: c.g, b: c.b, a: 1};\r\n        }\r\n        return false;\r\n    }\r\n    public static fromRgba(r: number, g: number, b: number, a: number = 1): WebColor {\r\n        const c = new WebColor();\r\n        c._r = WebColor.cutoff255(r);\r\n        c._g = WebColor.cutoff255(g);\r\n        c._b = WebColor.cutoff255(b);\r\n        c._a = WebColor.cutoff1(a);\r\n        return c;\r\n    }\r\n    private static hueToRgb(m1: number, m2: number, h: number): number {\r\n        if (h < 0) h += 1;\r\n        if (h > 1) h -= 1;\r\n        if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\r\n        if (h * 2 < 1) return m2;\r\n        if (h * 3 < 2) return m1 + (m2 - m1) * (2 / 3 - h) * 6;\r\n        return m1;\r\n    }\r\n    public static hslToRgb(h: number, s: number, l: number, a: number = 1): {r: number, g: number, b: number, a: number} {\r\n        // tslint:disable-next-line:ban-comma-operator\r\n        h = h % 360, s = WebColor.cutoff1(s), l = WebColor.cutoff1(l);\r\n        if (h < 0) h = 360 - h;\r\n        const m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s,\r\n              m1 = l * 2 - m2;\r\n        return {\r\n            r: WebColor.hueToRgb(m1, m2, h + 1 / 3),\r\n            g: WebColor.hueToRgb(m1, m2, h),\r\n            b: WebColor.hueToRgb(m1, m2, h - 1 / 3),\r\n            a: WebColor.cutoff1(a)\r\n        };\r\n    }\r\n    public static fromHsla(h: number, s: number, l: number, a: number = 1): WebColor {\r\n        // tslint:disable-next-line:ban-comma-operator\r\n        h = h % 360, s = WebColor.cutoff1(s), l = WebColor.cutoff1(l);\r\n        if (h < 0) h = 360 - h;\r\n        const  c = new WebColor();\r\n        const m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s,\r\n              m1 = l * 2 - m2;\r\n        c._r = WebColor.hueToRgb(m1, m2, h + 1 / 3);\r\n        c._g = WebColor.hueToRgb(m1, m2, h);\r\n        c._b = WebColor.hueToRgb(m1, m2, h - 1 / 3);\r\n        c._a = WebColor.cutoff1(a);\r\n        return c;\r\n    }\r\n    public static fromGray(gray: number, a: number = 1): WebColor {\r\n        const c = new WebColor();\r\n        c._r = WebColor.cutoff255(gray);\r\n        c._g = WebColor.cutoff255(gray);\r\n        c._b = WebColor.cutoff255(gray);\r\n        c._a = WebColor.cutoff1(a);\r\n        return c;\r\n    }\r\n    public get r(): number {\r\n        return this._r;\r\n    }\r\n    public get g(): number {\r\n        return this._g;\r\n    }\r\n    public get b(): number {\r\n        return this._b;\r\n    }\r\n    public get a(): number {\r\n        return this._a;\r\n    }\r\n    public toString(): string {\r\n        if (this._a !== 1) return this.toRgbaString();\r\n        else               return this.toCode();\r\n    }\r\n    public toCode(): string {\r\n        return \"#\" +\r\n            `0${this._r.toString(16)}`.slice(-2) +\r\n            `0${this._g.toString(16)}`.slice(-2) +\r\n            `0${this._b.toString(16)}`.slice(-2);\r\n    }\r\n    public toRgbString(): string {\r\n        return `rgb(${this._r},${this._g},${this._b})`;\r\n    }\r\n    public toRgbaString(): string {\r\n        return `rgb(${this._r},${this._g},${this._b},${this._a})`;\r\n    }\r\n    public toHsla(): {h: number, s: number, l: number, a: number} {\r\n        const r = this._r / 255, g = this._g / 255, b = this._b / 255;\r\n        const max = Math.max(g, b),\r\n              min = Math.min(g, b);\r\n        let   h = 0, s = 0;\r\n        const l = (max + min) / 2, c = max - min;\r\n        if (max !== min) {\r\n            if      (max === r) h = (g - b) / c;\r\n            else if (max === g) h = (b - r) / c + 2;\r\n            else                h = (r - g) / c + 4;\r\n            h = h * 60 + (h < 0 ? 360 : 0);\r\n            s = c / (l < 0.5 ? max + min : 2 - max - min);\r\n        }\r\n        return {h, s, l, a: this._a};\r\n    }\r\n    public toHslString(): string {\r\n        const c = this.toHsla();\r\n        return `hsl(${c.h},${c.s}%,${c.l}%)`;\r\n    }\r\n    public toHslaString(): string {\r\n        const c = this.toHsla();\r\n        return `hsl(${c.h},${c.s}%,${c.l}%,${this._a})`;\r\n    }\r\n}\r\n","// Copyright (c) 2017, Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nimport { NumberPrecision } from \"red-agate-util/modules/convert/NumberPrecision\";\r\n\r\n\r\nconst dp = NumberPrecision.decimalPlaces(6);\r\n\r\n\r\nexport class Point2D {\r\n    constructor(public x: number, public y: number) {\r\n    }\r\n    public toString(): string {\r\n        return `${this.x},${this.y}`;\r\n    }\r\n}\r\n\r\n\r\nexport class Vector2D {\r\n    constructor(public x: number, public y: number) {\r\n    }\r\n    public static fromPoints(p1: Point2D, p2: Point2D): Vector2D {\r\n        return new Vector2D(p2.x - p1.x, p2.y - p1.y);\r\n    }\r\n    public isZero(): boolean {\r\n        return this.x === 0 && this.y === 0;\r\n    }\r\n    public getLength(): number {\r\n        return Math.sqrt(this.x ** 2 + this.y ** 2);\r\n    }\r\n    /** returns 0..2*PI */\r\n    public getAngle(): number {\r\n        let angle = Math.acos(this.x / Math.sqrt(this.x ** 2 + this.y ** 2)); // returns 0..PI\r\n        if (0 > this.y) {\r\n            // 180deg < angle < 360deg\r\n            angle = Math.PI * 2 - angle;\r\n        }\r\n        return angle;\r\n    }\r\n    /** returns 0..PI */\r\n    public static getAngle(v1: Vector2D, v2: Vector2D): number {\r\n        const vlen1 = Math.sqrt(v1.x ** 2 + v1.y ** 2);\r\n        const vlen2 = Math.sqrt(v2.x ** 2 + v2.y ** 2);\r\n        return Math.acos((v1.x * v2.x + v1.y * v2.y) / (vlen1 * vlen2));\r\n    }\r\n    public toString(): string {\r\n        return `${this.x},${this.y}`;\r\n    }\r\n}\r\n\r\n\r\nexport class Rect2D {\r\n    constructor(public x: number, public y: number, public w: number, public h: number) {\r\n    }\r\n}\r\n\r\n\r\nexport class TransferMatrix2D {\r\n    // [m11 m21 dx]\r\n    // [m12 m22 dy]\r\n    // [  0   0  1]\r\n    public m11: number = 1;\r\n    public m21: number = 0;\r\n    public dx: number = 0;\r\n    public m12: number = 0;\r\n    public m22: number = 1;\r\n    public dy: number = 0;\r\n\r\n    constructor(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number);\r\n    constructor(src?: TransferMatrix2D);\r\n    // tslint:disable-next-line:variable-name\r\n    constructor(m11_or_src: any, m12?: number, m21?: number, m22?: number, dx?: number, dy?: number) {\r\n        if (! m11_or_src) return;\r\n        if (typeof m11_or_src === \"object\") {\r\n            this.m11 = m11_or_src.m11 || this.m11;\r\n            this.m12 = m11_or_src.m12 || this.m12;\r\n            this.m21 = m11_or_src.m21 || this.m21;\r\n            this.m22 = m11_or_src.m22 || this.m22;\r\n            this.dx  = m11_or_src.dx  || this.dx;\r\n            this.dy  = m11_or_src.dy  || this.dy;\r\n        } else {\r\n            this.m11 = m11_or_src || this.m11;\r\n            this.m12 = m12 || this.m12;\r\n            this.m21 = m21 || this.m21;\r\n            this.m22 = m22 || this.m22;\r\n            this.dx  = dx  || this.dx;\r\n            this.dy  = dy  || this.dy;\r\n        }\r\n    }\r\n    public toString(): string {\r\n        return `${this.m11} ${this.m12} ${this.m21} ${this.m22} ${this.dx} ${this.dy}`;\r\n    }\r\n    public isIdentity(): boolean {\r\n        return this.m11 === 1 && this.m21 === 0 && this.dx === 0 &&\r\n            this.m12 === 0 && this.m22 === 1 && this.dy === 0;\r\n    }\r\n\r\n    public scale(x: number, y: number): TransferMatrix2D {\r\n        return this.concat(new TransferMatrix2D(x, 0, 0, y, 0, 0));\r\n    }\r\n    public translate(x: number, y: number): TransferMatrix2D {\r\n        return this.concat(new TransferMatrix2D(1, 0, 0, 1, x, y));\r\n    }\r\n    public rotate(angle: number): TransferMatrix2D {\r\n        return this.concat(new TransferMatrix2D(\r\n            Math.cos(angle), Math.sin(angle), -Math.sin(angle), Math.cos(angle), 0, 0));\r\n    }\r\n    public skewX(angle: number): TransferMatrix2D {\r\n        return this.concat(new TransferMatrix2D(1, 0, Math.tan(angle), 1, 0, 0));\r\n    }\r\n    public skewY(angle: number): TransferMatrix2D {\r\n        return this.concat(new TransferMatrix2D(1, Math.tan(angle), 0, 1, 0, 0));\r\n    }\r\n    public concat(mat: TransferMatrix2D): TransferMatrix2D {\r\n        // [m11' m21' dx']   [m11*n11 + m21*n12, m11*n21 + m21*n22, m11*tx + m21*ty + dx]   [m11 m21 dx]   [n11 n21 tx]\r\n        // [m12' m22' dy'] = [m12*n11 + m22*n12, m12*n21 + m22*n22, m12*tx + m22*ty + dy] = [m12 m22 dy] * [n12 n22 ty]\r\n        // [  0    0   1 ]   [                0,                 0,                    1]   [  0   0  1]   [  0   0  1]\r\n        return new TransferMatrix2D(\r\n            this.m11 * mat.m11 + this.m21 * mat.m12,             // m11\r\n            this.m12 * mat.m11 + this.m22 * mat.m12,             // m12\r\n            this.m11 * mat.m21 + this.m21 * mat.m22,             // m21\r\n            this.m12 * mat.m21 + this.m22 * mat.m22,             // m22\r\n            this.m11 * mat.dx  + this.m21 * mat.dy + this.dx,    // dx\r\n            this.m12 * mat.dx  + this.m22 * mat.dy + this.dy     // dy\r\n        );\r\n    }\r\n\r\n    public transfer(p: Point2D): Point2D;\r\n    public transfer(x: number, y: number): number[];\r\n    // tslint:disable-next-line:variable-name\r\n    public transfer(x_or_p: any, y?: number): any {\r\n        // [x']   [m11 m21 dx]   [x]\r\n        // [y'] = [m12 m22 dy] * [y]\r\n        // [1 ]   [  0   0  1]   [1]\r\n        if (typeof x_or_p === \"object\")\r\n            return new Point2D(\r\n                dp(this.m11 * x_or_p.x + this.m21 * x_or_p.y + this.dx),\r\n                dp(this.m12 * x_or_p.x + this.m22 * x_or_p.y + this.dy)\r\n                );\r\n        else\r\n            return [\r\n                dp(this.m11 * x_or_p + this.m21 * (y as number) + this.dx),\r\n                dp(this.m12 * x_or_p + this.m22 * (y as number) + this.dy)\r\n                ];\r\n    }\r\n\r\n    //        [m11, m21, dx]\r\n    // A    = [m12, m22, dy]\r\n    //        [  0,   0,  1]\r\n    //\r\n    //        [ m22,  -m21,  m21* dy- dx*m22]\r\n    // A^-1 = [-m12,   m11,   dx*m12-m11* dy]\r\n    //        [   0,     0,  m11*m22-m21*m12]\r\n    public getInverse(): TransferMatrix2D {\r\n        return new TransferMatrix2D(\r\n             this.m22,\r\n            -this.m12,\r\n            -this.m21,\r\n             this.m11,\r\n            this.m21 * this.dy  - this.dx  * this.m22,\r\n            this.dx  * this.m12 - this.m11 * this.dy\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2017, Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\n/**\r\n * Number precision / significant figure\r\n */\r\nexport class NumberPrecision {\r\n    public static decimalPlaces(n: number): (v: number) => number {\r\n        return (v: number) => {\r\n            return Number(v.toFixed(n));\r\n        };\r\n    }\r\n\r\n    public static precision(n: number): (v: number) => number {\r\n        return (v: number) => {\r\n            return Number(v.toPrecision(n));\r\n        };\r\n    }\r\n}\r\n","// Copyright (c) 2017, Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nimport { TextEncoding }          from \"red-agate-util/modules/convert/TextEncoding\";\r\nimport { Base64 }                from \"red-agate-util/modules/convert/Base64\";\r\nimport { Escape }                from \"red-agate-util/modules/convert/Escape\";\r\nimport { WordWrap }              from \"red-agate-util/modules/convert/WordWrap\";\r\nimport { WebColor }              from \"./WebColor\";\r\nimport { VectorCanvas2DGradient,\r\n         VectorCanvas2DPattern,\r\n         VectorCanvas2D }        from \"./VectorCanvas2D\";\r\nimport { Point2D,\r\n         Vector2D,\r\n         Rect2D,\r\n         TransferMatrix2D }      from \"./TransferMatrix2D\";\r\n\r\n\r\nexport interface SvgCanvas2DAsset {\r\n    toDef(): string;\r\n}\r\n\r\n\r\nexport interface SvgTextAttributes {\r\n    /**\r\n     * author's computation of the total sum of all of the advance values\r\n     *  that correspond to character data within this element,\r\n     *  including the advance value on the glyph\r\n     */\r\n    textLength?: number;\r\n    /** 'spacing' | 'spacingAndGlyphs' */\r\n    lengthAdjust?: \"spacing\" | \"spacingAndGlyphs\";\r\n    /** line break on newline(0x0a) */\r\n    multiline?: boolean;\r\n    /**\r\n     * length from baseline to next baseline.\r\n     *  if writingMode is horizontal then add y coodinate.\r\n     *  if writingMode is vertical then add x coodinate.\r\n     */\r\n    lineHeight?: number;\r\n    /** rotation about the current text position (degree) */\r\n    rotate?: number;\r\n    /** 'lr-tb' | 'rl-tb' | 'tb-rl' | 'lr' | 'rl' | 'tb' */\r\n    writingMode?: \"lr-tb\" | \"rl-tb\" | \"tb-rl\" | \"lr\" | \"rl\" | \"tb\";\r\n    /** 'auto' | 0 | 90 | 180 | 270 */\r\n    glyphOrientationVertical?: \"auto\" | number;\r\n    /** 0 | 90 | 180 | 270 */\r\n    glyphOrientationHorizontal?: number;\r\n    /** 'ltr' | 'rtl'  */\r\n    direction?: \"ltr\" | \"rtl\";\r\n    /** 'normal' | 'embed' | 'bidi-override' */\r\n    unicodeBidi?: \"normal\" | \"embed\" | \"bidi-override\";\r\n    /** 'none' | [ 'underline' || 'overline' || 'line-through' ] */\r\n    textDecoration?: string;\r\n    /** use textPath */\r\n    textPath?: boolean;\r\n    /**  */\r\n    textPathOffset?: number;\r\n    /** 'auto' | length */\r\n    kerning?: \"auto\" | number;\r\n    /** 'normal' | length */\r\n    letterSpacing?: \"normal\" | number;\r\n    /** 'normal' | length */\r\n    wordSpacing?: \"normal\" | number;\r\n}\r\n\r\n\r\nexport class SvgCanvasImageData {\r\n    constructor(\r\n        public url: string,\r\n        public x: number, public y: number,\r\n        public width: number, public height: number) {\r\n    }\r\n}\r\n\r\n\r\nexport abstract class SvgCanvas2DGradient {\r\n}\r\n\r\n\r\nexport class SvgCanvas2DLinerGradient extends SvgCanvas2DGradient implements VectorCanvas2DGradient, SvgCanvas2DAsset {\r\n    private content: string;\r\n    constructor(\r\n        private id: string,\r\n        private x0: number, private y0: number, private x1: number, private y1: number) {\r\n        super();\r\n        this.content = `<linearGradient id=\"${id}\" gradientUnits=\"userSpaceOnUse\" x1=\"${x0}\" y1=\"${y0}\" x2=\"${x1}\" y2=\"${y1}\" >\\n`;\r\n    }\r\n    public addColorStop(offset: number, color: string, opacity: number = 1): void {\r\n        this.content += `<stop offset=\"${offset}\" stop-color=\"${color}\" stop-opacity=\"${opacity}\" />\\n`;\r\n    }\r\n    public toDef(): string {\r\n        return this.content + \"</linearGradient>\";\r\n    }\r\n    public toString(): string {\r\n        return `url(#${this.id})`;\r\n    }\r\n}\r\n\r\n\r\nexport class SvgCanvas2DRadialGradient extends SvgCanvas2DGradient implements VectorCanvas2DGradient, SvgCanvas2DAsset {\r\n    private content: string;\r\n    /** fr is ignored. fr is always 0. */\r\n    constructor(\r\n        private id: string,\r\n        private cx: number, private cy: number, private r: number,\r\n        private fx: number, private fy: number) {\r\n        super();\r\n        this.content = `<radialGradient id=\"${id}\" gradientUnits=\"userSpaceOnUse\" cx=\"${cx}\" cy=\"${cy}\" r=\"${r}\" fx=\"${fx}\" fy=\"${fy}\" >\\n`;\r\n    }\r\n    public addColorStop(offset: number, color: string, opacity: number = 1): void {\r\n        this.content += `<stop offset=\"${offset}\" stop-color=\"${color}\" stop-opacity=\"${opacity}\" />\\n`;\r\n    }\r\n    public toDef() {\r\n        return this.content + \"</radialGradient>\";\r\n    }\r\n    public toString() {\r\n        return `url(#${this.id})`;\r\n    }\r\n}\r\n\r\n\r\nexport class SvgCanvas2DPattern implements VectorCanvas2DPattern, SvgCanvas2DAsset {\r\n    constructor(\r\n        private id: string,\r\n        private imageData: SvgCanvasImageData) {\r\n    }\r\n    public toDef() {\r\n        const content =\r\n            `<image x=\"0\" y=\"0\" width=\"${this.imageData.width}\" height=\"${this.imageData.height}\" \\n` +\r\n            `xlink:href=\"${this.imageData.url}\" />`;\r\n        return `<pattern id=\"${this.id}\"  patternUnits=\"userSpaceOnUse\" patternContentUnits=\"userSpaceOnUse\" ` +\r\n            `x=\"${this.imageData.x}\" y=\"${this.imageData.y}\" ` +\r\n            `width=\"${this.imageData.width}\" height=\"${this.imageData.height}\">${content}</pattern>`;\r\n    }\r\n    public toString() {\r\n        return `url(#${this.id})`;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * canvas: source-over|source-in|source-out|source-atop|\r\n *         destination-over|destination-in|destination-out|destination-atop|\r\n *         lighter|copy|xor\r\n *    svg: over|in|out|atop|xor|arithmetic\r\n */\r\nexport type GlobalCompositeOperationValue =\r\n    \"source-over\" | \"source-in\" | \"source-out\" | \"source-atop\" |\r\n    \"destination-over\" | \"destination-in\" | \"destination-out\" | \"destination-atop\" |\r\n    \"lighter\" | \"copy\" | \"xor\" |\r\n    \"over\" | \"in\" | \"out\" | \"atop\" | \"arithmetic\";\r\n\r\n/**\r\n * text-anchor\r\n * canvas:start|end|left|right|center\r\n *    svg:start|middle|end\r\n */\r\nexport type TextAlignValue =\r\n    \"start\" | \"end\" | \"left\" | \"right\" | \"center\" | \"middle\";\r\n\r\n/**\r\n * dominant-baseline\r\n * canvas:top|hanging|middle|alphabetic|ideographic|bottom\r\n *    svg:auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge\r\n *        ('auto' is default. 'auto's effective value is depends on writing mode. if mode is horizontal then it is alphabetic. else then it is central)\r\n *\r\n * --------------------  text-before-edge (em square's edge)\r\n * --                --  hanging\r\n * --  X        X    --  mathematical\r\n *     X\r\n *     X        X\r\n * --  XXXX     X    --  central (em square's central), nearby of x-height(alphabetic lower case height)\r\n * --  X   X    X    --  middle (1/2 x-height)\r\n * --  X   X    X    --  alphabetic\r\n *            pp\r\n * -----------^^-------  ideographic, text-after-edge (em square's edge)\r\n */\r\nexport type TextBaselineValue =\r\n    \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\" |\r\n    \"auto\" | \"use-script\" | \"no-change\" | \"reset-size\" |\r\n    \"mathematical\" | \"central\" | \"text-after-edge\" | \"text-before-edge\";\r\n\r\n/**\r\n * stroke-linecap\r\n * butt|round|square\r\n */\r\nexport type LineCapValue = \"butt\" | \"round\" | \"square\";\r\n\r\n/**\r\n * stroke-linejoin\r\n * miter|round|bevel\r\n */\r\nexport type LineJoinValue = \"miter\" | \"round\" | \"bevel\";\r\n\r\n\r\nclass SvgCanvasGraphicState {\r\n    public globalAlpha: number = 1;\r\n\r\n    /**\r\n     * canvas: source-over|source-in|source-out|source-atop|\r\n     *         destination-over|destination-in|destination-out|destination-atop|\r\n     *         lighter|copy|xor\r\n     *    svg: over|in|out|atop|xor|arithmetic\r\n     */\r\n    public globalCompositeOperation: GlobalCompositeOperationValue = \"source-over\";\r\n\r\n    public shadowBlur: number = 0;\r\n    /**\r\n     * canvas   : <'web-color'>|#000|#000000|rgb(0,0,0)|rgba(0,0,0,0)\r\n     * SvgCanvas: rgb(0,0,0)|rgba(0,0,0,0)\r\n     */\r\n    public shadowColor: string = \"rgba(0,0,0,1)\";\r\n    public shadowOffsetX: number = 0;\r\n    public shadowOffsetY: number = 0;\r\n\r\n    public filterIdUrl: string | null = null;\r\n\r\n    /**\r\n     * canvas: \"italic bold 26px 'Times New Roman'\"\r\n     *    svg: font-family =\"Times New Roman\"\r\n     *         font-style  =normal|italic|oblique\r\n     *         font-variant=normal|small-caps\r\n     *         font-weight =normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900\r\n     *         font-stretch=normal|wider|narrower|ultra-condensed|extra-condensed|condensed|\r\n     *                      semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded\r\n     *         font-size   =<absolute-size>|<relative-size>|<length>|<percentage>\r\n     *         font-size-adjust=<number>|none\r\n     *         font        =[[<'font-style'>||<'font-variant'>||<'font-weight'>]?<'font-size'>[/<'line-height'>]?<'font-family'>]\r\n     */\r\n    public font: string = \"normal 12px 'Times New Roman'\";\r\n    /**\r\n     * text-anchor\r\n     * canvas:start|end|left|right|center\r\n     *    svg:start|middle|end\r\n     */\r\n    public textAlign: TextAlignValue = \"start\";\r\n    /**\r\n     * dominant-baseline\r\n     * default is 'auto'.\r\n     * canvas:top|hanging|middle|alphabetic|ideographic|bottom\r\n     *        ('alphabetic' is default)\r\n     *    svg:auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge\r\n     *        ('auto' is default. 'auto's effective value is depends on writing mode. if mode is horizontal then it is alphabetic. else then it is central)\r\n     */\r\n    public textBaseline: TextBaselineValue = \"auto\";\r\n\r\n    /**\r\n     * stroke-linecap\r\n     * butt|round|square\r\n     */\r\n    public lineCap: LineCapValue = \"butt\";\r\n    public lineDashOffset: number = 0;\r\n    /**\r\n     * stroke-linejoin\r\n     * miter|round|bevel\r\n     */\r\n    public lineJoin: LineJoinValue = \"miter\";\r\n    public lineWidth: number = 1;\r\n    public miterLimit: number = 4;\r\n\r\n    public strokeStyle: string = \"black\";\r\n    public fillStyle: string = \"black\";\r\n\r\n    public ctm: TransferMatrix2D = new TransferMatrix2D();\r\n    public currentPoint: Point2D | null = null;\r\n    public currentPointOnCtm: Point2D | null = null;\r\n    public subpath: Array<string | number | Point2D> = [];\r\n\r\n    public lineDash: number[] = [];\r\n    public clipPath: string = \"\";\r\n\r\n    constructor(src?: SvgCanvasGraphicState) {\r\n        if (! src) return;\r\n        for (const key in this) {\r\n            if (this.hasOwnProperty(key) && src.hasOwnProperty(key)) {\r\n                (this as any)[key] = (src as any)[key];\r\n            }\r\n        }\r\n        this.subpath = Array.from(this.subpath);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * subset of CanvasRenderingContext2D\r\n */\r\nexport class SvgCanvas implements VectorCanvas2D {\r\n    public get globalAlpha(): number {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].globalAlpha;\r\n    }\r\n    public set globalAlpha(value: number) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].globalAlpha = value;\r\n    }\r\n\r\n    public get globalCompositeOperation(): GlobalCompositeOperationValue {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].globalCompositeOperation;\r\n    }\r\n    public set globalCompositeOperation(value: GlobalCompositeOperationValue) {\r\n        this.filterIdUrl = null;\r\n        this.graphicsStack[this.graphicsStack.length - 1].globalCompositeOperation = value;\r\n    }\r\n\r\n    public get shadowBlur(): number {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].shadowBlur;\r\n    }\r\n    public set shadowBlur(value: number) {\r\n        this.filterIdUrl = null;\r\n        this.graphicsStack[this.graphicsStack.length - 1].shadowBlur = value;\r\n    }\r\n    public get shadowColor(): string {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].shadowColor;\r\n    }\r\n    public set shadowColor(value: string) {\r\n        this.filterIdUrl = null;\r\n        this.graphicsStack[this.graphicsStack.length - 1].shadowColor = value;\r\n    }\r\n    public get shadowOffsetX(): number {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].shadowOffsetX;\r\n    }\r\n    public set shadowOffsetX(value: number) {\r\n        this.filterIdUrl = null;\r\n        this.graphicsStack[this.graphicsStack.length - 1].shadowOffsetX = value;\r\n    }\r\n    public get shadowOffsetY(): number {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].shadowOffsetY;\r\n    }\r\n    public set shadowOffsetY(value: number) {\r\n        this.filterIdUrl = null;\r\n        this.graphicsStack[this.graphicsStack.length - 1].shadowOffsetY = value;\r\n    }\r\n    private get filterIdUrl(): string | null {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].filterIdUrl;\r\n    }\r\n    private set filterIdUrl(value: string | null) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].filterIdUrl = value;\r\n    }\r\n\r\n    /**\r\n     * canvas: \"italic bold 26px 'Times New Roman'\"\r\n     *    svg: font-family =\"Times New Roman\"\r\n     *         font-style  =normal|italic|oblique\r\n     *         font-variant=normal|small-caps\r\n     *         font-weight =normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900\r\n     *         font-stretch=normal|wider|narrower|ultra-condensed|extra-condensed|condensed|\r\n     *                      semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded\r\n     *         font-size   =<absolute-size>|<relative-size>|<length>|<percentage>\r\n     *         font-size-adjust=<number>|none\r\n     *         font        =[[<'font-style'>||<'font-variant'>||<'font-weight'>]?<'font-size'>[/<'line-height'>]?<'font-family'>]\r\n     */\r\n    public get font(): string {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].font;\r\n    }\r\n    /**\r\n     * canvas: \"italic bold 26px 'Times New Roman'\"\r\n     *         [<‘font-style’>||<font-variant>||<‘font-weight’>||<‘font-stretch’>]?<‘font-size’>[/<‘line-height’>]?<‘font-family’>\r\n     *\r\n     *    svg: font-family =\"Times New Roman\"\r\n     *         font-style  =normal|italic|oblique\r\n     *         font-variant=normal|small-caps\r\n     *         font-weight =normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900\r\n     *         font-stretch=normal|wider|narrower|ultra-condensed|extra-condensed|condensed|\r\n     *                      semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded\r\n     *         font-size   =<absolute-size>|<relative-size>|<length>|<percentage>\r\n     *         font-size-adjust=<number>|none\r\n     *         font        =[<'font-style'>||<'font-variant'>||<'font-weight'>]?<'font-size'>[/<'line-height'>]?<'font-family'>\r\n     */\r\n    public set font(value: string) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].font = value;\r\n    }\r\n    /**\r\n     * text-anchor\r\n     * canvas:start|end|left|right|center\r\n     *    svg:start|middle|end\r\n     */\r\n    public get textAlign(): TextAlignValue {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].textAlign;\r\n    }\r\n    /**\r\n     * text-anchor\r\n     * canvas:start|end|left|right|center\r\n     *    svg:start|middle|end\r\n     */\r\n    public set textAlign(value: TextAlignValue) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].textAlign = value;\r\n    }\r\n    /**\r\n     * dominant-baseline\r\n     * canvas:top|hanging|middle|alphabetic|ideographic|bottom\r\n     *    svg:auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge\r\n     */\r\n    public get textBaseline(): TextBaselineValue {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].textBaseline;\r\n    }\r\n    /**\r\n     * dominant-baseline\r\n     * canvas:top|hanging|middle|alphabetic|ideographic|bottom\r\n     *    svg:auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge\r\n     */\r\n    public set textBaseline(value: TextBaselineValue) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].textBaseline = value;\r\n    }\r\n\r\n    /**\r\n     * stroke-linecap\r\n     * butt|round|square\r\n     */\r\n    public get lineCap(): LineCapValue {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].lineCap;\r\n    }\r\n    /**\r\n     * stroke-linecap\r\n     * butt|round|square\r\n     */\r\n    public set lineCap(value: LineCapValue) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].lineCap = value;\r\n    }\r\n    public get lineDashOffset(): number {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].lineDashOffset;\r\n    }\r\n    public set lineDashOffset(value: number) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].lineDashOffset = value;\r\n    }\r\n    /**\r\n     * stroke-linejoin\r\n     * miter|round|bevel\r\n     */\r\n    public get lineJoin(): LineJoinValue {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].lineJoin;\r\n    }\r\n    /**\r\n     * stroke-linejoin\r\n     * miter|round|bevel\r\n     */\r\n    public set lineJoin(value: LineJoinValue) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].lineJoin = value;\r\n    }\r\n    public get lineWidth(): number {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].lineWidth;\r\n    }\r\n    public set lineWidth(value: number) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].lineWidth = value;\r\n    }\r\n    public get miterLimit(): number {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].miterLimit;\r\n    }\r\n    public set miterLimit(value: number) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].miterLimit = value;\r\n    }\r\n\r\n    public get strokeStyle(): string | SvgCanvas2DLinerGradient | SvgCanvas2DRadialGradient | SvgCanvas2DPattern {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].strokeStyle;\r\n    }\r\n    public set strokeStyle(value: string | SvgCanvas2DLinerGradient | SvgCanvas2DRadialGradient | SvgCanvas2DPattern) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].strokeStyle = value.toString();\r\n    }\r\n    public get fillStyle(): string | SvgCanvas2DLinerGradient | SvgCanvas2DRadialGradient | SvgCanvas2DPattern {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].fillStyle;\r\n    }\r\n    public set fillStyle(value: string | SvgCanvas2DLinerGradient | SvgCanvas2DRadialGradient | SvgCanvas2DPattern) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].fillStyle = value.toString();\r\n    }\r\n\r\n    private get ctm(): TransferMatrix2D {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].ctm;\r\n    }\r\n    private set ctm(value: TransferMatrix2D) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].ctm = value;\r\n    }\r\n    private get currentPoint(): Point2D | null {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].currentPoint;\r\n    }\r\n    private set currentPoint(value: Point2D | null) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].currentPoint = value;\r\n    }\r\n    private get currentPointOnCtm(): Point2D | null {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].currentPointOnCtm;\r\n    }\r\n    private set currentPointOnCtm(value: Point2D | null) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].currentPointOnCtm = value;\r\n    }\r\n    private get subpath(): Array<string | number | Point2D> {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].subpath;\r\n    }\r\n    private set subpath(value: Array<string | number | Point2D>) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].subpath = value;\r\n    }\r\n\r\n    private get lineDash(): number[] {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].lineDash;\r\n    }\r\n    private set lineDash(value: number[]) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].lineDash = value;\r\n    }\r\n    private get clipPath(): string {\r\n        return this.graphicsStack[this.graphicsStack.length - 1].clipPath;\r\n    }\r\n    private set clipPath(value: string) {\r\n        this.graphicsStack[this.graphicsStack.length - 1].clipPath = value;\r\n    }\r\n\r\n    private get subpathIsEmptyOrClosed(): boolean {\r\n        return this.subpath.length === 0 || this.subpath[this.subpath.length - 1] === \"Z\";\r\n    }\r\n\r\n    private graphicsStack: SvgCanvasGraphicState[] = [];\r\n    private assets: Array<SvgCanvas2DAsset | string> = [];\r\n    private content = \"\";\r\n    private contentSaved = \"\";\r\n    private idCount = 0;\r\n    private template: string | null = null;\r\n\r\n    constructor() {\r\n        this.graphicsStack.push(new SvgCanvasGraphicState());\r\n    }\r\n\r\n    public static fromTemplate(template: string): SvgCanvas {\r\n        const c = new SvgCanvas();\r\n        c.template = template;\r\n        c.idCount = new Date().getTime();\r\n        return c;\r\n    }\r\n\r\n    public render(viewbox: Rect2D, unit: string = \"mm\"): string {\r\n        const svgns = `xmlns=\"http://www.w3.org/2000/svg\"`;\r\n        const xlinkns = `xmlns:xlink=\"http://www.w3.org/1999/xlink\"`;\r\n        const vbox = `viewBox=\"${viewbox.x} ${viewbox.y} ${viewbox.w} ${viewbox.h}\"`;\r\n        const defs = `<defs>\\n${\r\n                this.assets.map(x => typeof x === \"string\" ? x : x.toDef()).join(\"\\n\")\r\n            }</defs>`;\r\n\r\n        if (! this.template) {\r\n            return `<svg ${svgns} ${xlinkns} version=\"1.1\" width=\"${viewbox.w}${unit}\" height=\"${viewbox.h}${unit}\" ${vbox}>\\n${\r\n                defs}\\n${this.contentSaved}${this.content}</svg>`;\r\n        } else {\r\n            let tmpl = this.template.replace(/<\\/svg>\\s*$/, '');\r\n\r\n            {\r\n                const re = /(<svg[^>]*?)\\s+?width\\s*?=\\s*?[\"'](?:[^\"'>]+?)[\"']([^>]*?>)/;\r\n                if (re.test(tmpl)) {\r\n                    tmpl = tmpl.replace(re, `$1 width=\"${viewbox.w}${unit}\"$2`);\r\n                } else {\r\n                    tmpl = tmpl.replace(/<svg\\s/, `<svg width=\"${viewbox.w}${unit}\" `);\r\n                }\r\n            }\r\n            {\r\n                const re = /(<svg[^>]*?)\\s+?height\\s*?=\\s*?[\"'](?:[^\"'>]+?)[\"']([^>]*?>)/;\r\n                if (re.test(tmpl)) {\r\n                    tmpl = tmpl.replace(re, `$1 height=\"${viewbox.h}${unit}\"$2`);\r\n                } else {\r\n                    tmpl = tmpl.replace(/<svg\\s/, `<svg height=\"${viewbox.h}${unit}\" `);\r\n                }\r\n            }\r\n            {\r\n                const re = /(<svg[^>]*?)\\s+?viewBox\\s*?=\\s*?[\"'](?:[^\"'>]+?)[\"']([^>]*?>)/;\r\n                if (re.test(tmpl)) {\r\n                    tmpl = tmpl.replace(re, `$1 ${vbox}$2`);\r\n                } else {\r\n                    tmpl = tmpl.replace(/<svg\\s/, `<svg ${vbox} `);\r\n                }\r\n            }\r\n\r\n            if (! tmpl.match(/<svg[^>]*?\\s+?xmlns:xlink\\s*?=/)) {\r\n                tmpl = tmpl.replace(/<svg\\s/, `<svg ${xlinkns} `);\r\n            }\r\n            if (! tmpl.match(/<svg[^>]*?\\s+?xmlns\\s*?=/)) {\r\n                tmpl = tmpl.replace(/<svg\\s/, `<svg ${svgns} `);\r\n            }\r\n\r\n            return `${tmpl}\\n${defs}\\n${this.contentSaved}${this.content}</svg>`;\r\n        }\r\n    }\r\n\r\n    public toDataUrl(viewbox: Rect2D, unit: string = \"mm\", lineLength: number = 120): string {\r\n        return \"data:image/svg+xml;base64,\" +\r\n            Base64.encode(TextEncoding.encodeToUtf8(this.render(viewbox, unit)), lineLength);\r\n    }\r\n\r\n    /** postscript gsave */\r\n    public save(): void {\r\n        const s = new SvgCanvasGraphicState(this.graphicsStack[this.graphicsStack.length - 1]);\r\n        this.graphicsStack.push(s);\r\n    }\r\n    /** postscript grestore */\r\n    public restore(restorePath: boolean = false): void {\r\n        if (restorePath) {\r\n            if (0 < this.graphicsStack.length) this.graphicsStack.pop();\r\n        } else {\r\n            if (0 < this.graphicsStack.length) {\r\n                const subpath = this.subpath;\r\n                const cpt = this.currentPoint;\r\n                const cptoctm = this.currentPointOnCtm;\r\n\r\n                this.graphicsStack.pop();\r\n\r\n                this.subpath = subpath;\r\n                this.currentPoint = cpt;\r\n                this.currentPointOnCtm = cptoctm;\r\n            }\r\n        }\r\n    }\r\n\r\n    /** postscript x y scale */\r\n    public scale(x: number, y: number): void {\r\n        if (this.currentPointOnCtm !== null) {\r\n            const tm = new TransferMatrix2D().scale(x, y);\r\n            this.currentPointOnCtm = tm.transfer(this.currentPointOnCtm);\r\n        }\r\n        this.ctm = this.ctm.scale(x, y);\r\n    }\r\n    /** postscript x y translate */\r\n    public translate(x: number, y: number): void {\r\n        if (this.currentPointOnCtm !== null) {\r\n            const tm = new TransferMatrix2D().translate(x, y);\r\n            this.currentPointOnCtm = tm.transfer(this.currentPointOnCtm);\r\n        }\r\n        this.ctm = this.ctm.translate(x, y);\r\n    }\r\n    /** postscript (angle*180/PI) rotate */\r\n    public rotate(angle: number): void {\r\n        if (this.currentPointOnCtm !== null) {\r\n            const tm = new TransferMatrix2D().rotate(angle);\r\n            this.currentPointOnCtm = tm.transfer(this.currentPointOnCtm);\r\n        }\r\n        this.ctm = this.ctm.rotate(angle);\r\n    }\r\n    /** postscript [m11 m12 m21 m22 dx dy] concat */\r\n    public transform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void {\r\n        const tm = new TransferMatrix2D(m11, m12, m21, m22, dx, dy);\r\n        if (this.currentPointOnCtm !== null)\r\n            this.currentPointOnCtm = tm.transfer(this.currentPointOnCtm);\r\n        this.ctm = this.ctm.concat(tm);\r\n    }\r\n    /** postscript [m11 m12 m21 m22 dx dy] setmatrix */\r\n    public setTransform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void {\r\n        this.currentPointOnCtm = null;\r\n        this.ctm = new TransferMatrix2D(m11, m12, m21, m22, dx, dy);\r\n    }\r\n\r\n    /** postscript newpath */\r\n    public beginPath(): void {\r\n        this.subpath = [];\r\n        this.currentPoint = null;\r\n        this.currentPointOnCtm = null;\r\n    }\r\n    /** postscript closepath */\r\n    public closePath(): void {\r\n        this.subpath.push(\"Z\");\r\n        this.currentPoint = null;\r\n        this.currentPointOnCtm = null;\r\n    }\r\n\r\n    /** postscript x y moveto */\r\n    public moveTo(x: number, y: number): void {\r\n        const p = new Point2D(x, y);\r\n        this.subpath.push(\"M\", this.ctm.transfer(p));\r\n        this.currentPoint = this.subpath[this.subpath.length - 1] as Point2D;\r\n        this.currentPointOnCtm = p;\r\n    }\r\n    /** postscript x y lineto */\r\n    public lineTo(x: number, y: number, ...extra: number[]): void {\r\n        let p = new Point2D(x, y);\r\n        this.subpath.push(\"L\", this.ctm.transfer(p));\r\n        if (extra && extra.length % 4 === 0) {\r\n            for (let i = 0; i < extra.length; i += 2) {\r\n                if (extra.length <= (i + 1)) break;\r\n                p = new Point2D(extra[i], extra[i + 1]);\r\n                this.subpath.push(this.ctm.transfer(p));\r\n            }\r\n        }\r\n        this.currentPoint = this.subpath[this.subpath.length - 1] as Point2D;\r\n        this.currentPointOnCtm = p;\r\n    }\r\n    public quadraticCurveTo(cpx: number, cpy: number, x: number, y: number, ...extra: number[]): void {\r\n        let p = new Point2D(x, y);\r\n        this.subpath.push(\"Q\",\r\n            this.ctm.transfer(new Point2D(cpx, cpy)),\r\n            this.ctm.transfer(p));\r\n        if (extra && extra.length % 4 === 0) {\r\n            for (let i = 0; i < extra.length; i += 2) {\r\n                if (extra.length <= (i + 1)) break;\r\n                p = new Point2D(extra[i], extra[i + 1]);\r\n                this.subpath.push(this.ctm.transfer(p));\r\n            }\r\n        }\r\n        this.currentPoint = this.subpath[this.subpath.length - 1] as Point2D;\r\n        this.currentPointOnCtm = p;\r\n    }\r\n    /** postscript cp1x cp1y cp2x cp2y x y curveto */\r\n    public bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number, ...extra: number[]): void {\r\n        let p = new Point2D(x, y);\r\n        this.subpath.push(\"C\",\r\n            this.ctm.transfer(new Point2D(cp1x, cp1y)),\r\n            this.ctm.transfer(new Point2D(cp2x, cp2y)),\r\n            this.ctm.transfer(p));\r\n        if (extra && extra.length % 6 === 0) {\r\n            for (let i = 0; i < extra.length; i += 2) {\r\n                p = new Point2D(extra[i], extra[i + 1]);\r\n                this.subpath.push(this.ctm.transfer(p));\r\n            }\r\n        }\r\n        this.currentPoint = this.subpath[this.subpath.length - 1] as Point2D;\r\n        this.currentPointOnCtm = p;\r\n    }\r\n\r\n    /**\r\n     * postscript arc / arcn\r\n     * anticlockwise= true: x y startAngle endAngle arc\r\n     * anticlockwise=false: x y startAngle endAngle arcn\r\n     * center: (x,y)\r\n     */\r\n    public arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean = false): void {\r\n        const entired = Math.abs(endAngle - startAngle) >= (2 * Math.PI);\r\n\r\n        if (Math.abs(startAngle) > (2 * Math.PI)) startAngle = startAngle % (2 * Math.PI);\r\n        if (startAngle < 0)                       startAngle = (2 * Math.PI) + startAngle;\r\n        if (Math.abs(endAngle)   > (2 * Math.PI)) endAngle   = endAngle   % (2 * Math.PI);\r\n        if (endAngle   < 0)                       endAngle   = (2 * Math.PI) + endAngle  ;\r\n\r\n        if (entired) {\r\n            endAngle = startAngle + (2 * Math.PI);\r\n        } else {\r\n            if (anticlockwise) {\r\n                [startAngle, endAngle] = [endAngle, startAngle];\r\n            }\r\n            if (endAngle < startAngle) {\r\n                endAngle = endAngle + (2 * Math.PI);\r\n            }\r\n        }\r\n        let angle = endAngle - startAngle;\r\n        let r = 0;\r\n        const PI_2 = Math.PI / 2;\r\n\r\n        // approximate the arc by a Bezier curve.\r\n        const k0 = (4 * (Math.sqrt(2) - 1)) / 3; // 0.55228474983...\r\n        const tm0 = new TransferMatrix2D().translate(x, y).scale(radius, radius);\r\n\r\n        let points: Point2D[] = [];\r\n\r\n        // tslint:disable-next-line:ban-comma-operator\r\n        for (; PI_2 < angle; r += PI_2, angle -= PI_2) {\r\n            const tm = tm0.rotate(startAngle + r);\r\n\r\n            if (points.length === 0)\r\n                points.push(tm.transfer(new Point2D(1, 0)));\r\n\r\n            points.push(tm.transfer(new Point2D( 1, k0)));\r\n            points.push(tm.transfer(new Point2D(k0,  1)));\r\n            points.push(tm.transfer(new Point2D( 0,  1)));\r\n        }\r\n\r\n        const k1 = (4 * Math.tan(angle / 4)) / 3;\r\n        {\r\n            const tm = tm0.rotate(startAngle + r);\r\n\r\n            if (points.length === 0)\r\n                points.push(tm.transfer(new Point2D(1, 0)));\r\n\r\n            points.push(tm.transfer(new Point2D(1, k1)));\r\n            points.push(tm.transfer(\r\n                new Point2D(\r\n                    Math.cos(angle) + k1 * Math.sin(angle),\r\n                    Math.sin(angle) - k1 * Math.cos(angle))));\r\n            points.push(tm.transfer(\r\n                new Point2D(\r\n                    Math.cos(angle),\r\n                    Math.sin(angle))));\r\n        }\r\n        if (anticlockwise) points = points.reverse();\r\n\r\n        const p = points[points.length - 1];\r\n        points = points.map(pt => this.ctm.transfer(pt));\r\n        this.subpath.push(this.subpathIsEmptyOrClosed ? \"M\" : \"L\", points.shift() as Point2D, \"C\");\r\n        this.subpath.push(...points);\r\n        this.currentPoint = this.subpath[this.subpath.length - 1] as Point2D;\r\n        this.currentPointOnCtm = p;\r\n    }\r\n\r\n    /** postscript x1 y1 x2 y2 arcto */\r\n    public arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void {\r\n        const p0 = this.currentPointOnCtm;\r\n        if (p0 === null) {\r\n            return;\r\n        }\r\n\r\n        const p1 = new Point2D(x1, y1);\r\n        const p2 = new Point2D(x2, y2);\r\n\r\n        const v1 = Vector2D.fromPoints(p0, p1);\r\n        const v2 = Vector2D.fromPoints(p1, p2);\r\n\r\n        if ((v1.x === 0 && v2.x === 0) || (v1.y === 0 && v2.y === 0) ||\r\n            v1.isZero() || v2.isZero()) {\r\n            this.subpath.push(\"L\", this.ctm.transfer(p1), this.ctm.transfer(p2));\r\n            this.currentPointOnCtm = p2;\r\n            return;\r\n        }\r\n\r\n        const arcAngle = Vector2D.getAngle(v1, v2);\r\n        if (arcAngle === 0 || arcAngle === Math.PI) {\r\n            this.subpath.push(\"L\", this.ctm.transfer(p1), this.ctm.transfer(p2));\r\n            this.currentPointOnCtm = p2;\r\n            return;\r\n        }\r\n        const linesAngle = Math.PI - arcAngle;\r\n\r\n        const a = radius / Math.sin(linesAngle / 2);\r\n        const b = Math.abs(Math.cos(linesAngle / 2) * a);\r\n\r\n        let vang1 = Vector2D.fromPoints(p1, p0).getAngle();\r\n        let vang2 = v2.getAngle();\r\n\r\n        const cp1 = new Point2D(\r\n            b * Math.cos(vang1) + p1.x,\r\n            b * Math.sin(vang1) + p1.y);\r\n        const cp2 = new Point2D(\r\n            b * Math.cos(vang2) + p1.x,\r\n            b * Math.sin(vang2) + p1.y);\r\n        if (Math.abs(vang2 - vang1) > Math.PI) {\r\n            if (vang2 > vang1) vang1 += Math.PI * 2;\r\n            else               vang2 += Math.PI * 2;\r\n        }\r\n        const center = new Point2D(\r\n            a * Math.cos((vang1 + vang2) / 2) + p1.x,\r\n            a * Math.sin((vang1 + vang2) / 2) + p1.y);\r\n\r\n        const vcp1 = Vector2D.fromPoints(center, cp1);\r\n        const vcp2 = Vector2D.fromPoints(center, cp2);\r\n        let angcp1 = vcp1.getAngle();\r\n        let angcp2 = vcp2.getAngle();\r\n        if (Math.abs(angcp2 - angcp1) > Math.PI) {\r\n            if (angcp2 > angcp1) angcp1 += Math.PI * 2;\r\n            else                 angcp2 += Math.PI * 2;\r\n        }\r\n\r\n        // this.subpath.push(\"L\", this.ctm.transfer(cp1), this.ctm.transfer(center), this.ctm.transfer(cp2)); // debug\r\n        this.arc(center.x, center.y, radius, angcp1, angcp2, angcp1 >= angcp2);\r\n        this.lineTo(x2, y2);\r\n    }\r\n\r\n    public circle(x: number, y: number, radius: number, anticlockwise: boolean = true): void {\r\n        if (! this.subpathIsEmptyOrClosed) this.closePath();\r\n        this.arc(x, y, radius, 0, 2 * Math.PI, anticlockwise);\r\n        this.closePath();\r\n    }\r\n\r\n    public rect(x: number, y: number, w: number, h: number, anticlockwise: boolean = true): void {\r\n        if (anticlockwise) {\r\n            this.subpath.push(\r\n                \"M\", this.ctm.transfer(new Point2D(x, y)), \"L\",\r\n                this.ctm.transfer(new Point2D(x, y + h)), this.ctm.transfer(new Point2D(x + w, y + h)),\r\n                this.ctm.transfer(new Point2D(x + w, y)), \"Z\"\r\n                );\r\n        } else {\r\n            this.subpath.push(\r\n                \"M\", this.ctm.transfer(new Point2D(x, y)), \"L\",\r\n                this.ctm.transfer(new Point2D(x + w, y)), this.ctm.transfer(new Point2D(x + w, y + h)),\r\n                this.ctm.transfer(new Point2D(x, y + h)), \"Z\"\r\n                );\r\n        }\r\n        this.currentPoint = null;\r\n        this.currentPointOnCtm = null;\r\n    }\r\n\r\n    public roundRect(x: number, y: number, w: number, h: number, radius: number, anticlockwise: boolean = true): void {\r\n        if (anticlockwise) {\r\n            this.moveTo(x        , y + h / 2);\r\n            this. arcTo(x        , y + h    , x + w / 2, y + h    , radius);\r\n            this. arcTo(x + w    , y + h    , x + w    , y + h / 2, radius);\r\n            this. arcTo(x + w    , y        , x + w / 2, y        , radius);\r\n            this. arcTo(x        , y        , x        , y + h / 2, radius);\r\n        } else {\r\n            this.moveTo(x + w / 2, y        );\r\n            this. arcTo(x + w    , y        , x + w    , y + h / 2, radius);\r\n            this. arcTo(x + w    , y + h    , x + w / 2, y + h    , radius);\r\n            this. arcTo(x        , y + h    , x        , y + h / 2, radius);\r\n            this. arcTo(x        , y        , x + w / 2, y        , radius);\r\n        }\r\n        this.closePath();\r\n    }\r\n\r\n    private getInheritedStyle(style: string | SvgCanvas2DLinerGradient | SvgCanvas2DRadialGradient | SvgCanvas2DPattern):\r\n            {style: string | SvgCanvas2DLinerGradient | SvgCanvas2DRadialGradient | SvgCanvas2DPattern, alpha: number} {\r\n\r\n        let found: RegExpMatchArray | null;\r\n        const styleStr = style.toString();\r\n        let alpha = this.globalAlpha;\r\n\r\n        let color: {r: number, g: number, b: number, a: number} | {h: number, s: number, l: number, a: number} | boolean;\r\n\r\n        // tslint:disable-next-line:no-conditional-assignment\r\n        if (color = WebColor.isRgb(styleStr)) {\r\n            const rgba = color as {r: number, g: number, b: number, a: number};\r\n            alpha *= rgba.a;\r\n            style = `rgb(${rgba.r},${rgba.g},${rgba.b})`;\r\n        }\r\n        // tslint:disable-next-line:no-conditional-assignment\r\n        else if (color = WebColor.isHsl(styleStr)) {\r\n            const hsla = color as {h: number, s: number, l: number, a: number};\r\n            alpha *= hsla.a;\r\n            style = `hsl(${hsla.h},${hsla.s * 100}%,${hsla.l * 100}%)`;\r\n        }\r\n        else if (! this.ctm.isIdentity()) {\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            if (found = styleStr.match(/^url\\(\\#lgrad-(.+)\\)$/)) {\r\n                this.assets.push(\r\n                    `<linearGradient id=\"lgrad-${++this.idCount}\" xlink:href=\"#lgrad-${found[1]}\" ` +\r\n                    `gradientTransform=\"matrix(${this.ctm.toString()})\" />`);\r\n                style = `url(#lgrad-${this.idCount})`;\r\n            }\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            else if (found = styleStr.match(/^url\\(\\#rgrad-(.+)\\)$/)) {\r\n                this.assets.push(\r\n                    `<radialGradient id=\"rgrad-${++this.idCount}\" xlink:href=\"#rgrad-${found[1]}\" ` +\r\n                    `gradientTransform=\"matrix(${this.ctm.toString()})\" />`);\r\n                style = `url(#rgrad-${this.idCount})`;\r\n            }\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            else if (found = styleStr.match(/^url\\(\\#pat-(.+)\\)$/)) {\r\n                this.assets.push(\r\n                    `<pattern id=\"pat-${++this.idCount}\" xlink:href=\"#pat-${found[1]}\" ` +\r\n                    `patternTransform=\"matrix(${this.ctm.toString()})\" />`);\r\n                style = `url(#pat-${this.idCount})`;\r\n            }\r\n        }\r\n        return {style, alpha};\r\n    }\r\n\r\n    private getStrokeAttrs(): string {\r\n        const styleAndAlpha = this.getInheritedStyle(this.strokeStyle);\r\n        return `stroke=\"${styleAndAlpha.style}\" stroke-width=\"${this.lineWidth}\" ` +\r\n            `stroke-linecap=\"${this.lineCap}\" stroke-linejoin=\"${this.lineJoin}\" stroke-miterlimit=\"${this.miterLimit}\" ` +\r\n            (this.getLineDash().length > 0 ?\r\n                `stroke-dasharray=\"${this.getLineDash().join(\",\")}\" stroke-dashoffset=\"${this.lineDashOffset}\" ` : \"\") +\r\n            `stroke-opacity=\"${styleAndAlpha.alpha}\" `;\r\n    }\r\n    private getFillAttrs(fillRule: string): string {\r\n        const styleAndAlpha = this.getInheritedStyle(this.fillStyle);\r\n        return `fill=\"${styleAndAlpha.style}\" fill-rule=\"${fillRule}\" fill-opacity=\"${styleAndAlpha.alpha}\" `;\r\n    }\r\n\r\n    private getFilterAttrs(): string {\r\n        if (this.filterIdUrl === \"\") {\r\n            // do nothing.\r\n        } else if (this.filterIdUrl === null) {\r\n            if (0 < this.shadowBlur || (\r\n                this.globalCompositeOperation &&\r\n                this.globalCompositeOperation !== \"source-over\")) {\r\n\r\n                let content = \"\";\r\n                let merge   = \"\";\r\n\r\n                if (0 < this.shadowBlur) {\r\n                    content +=\r\n                        `<feGaussianBlur stdDeviation=\"${this.shadowBlur}\" result=\"blur\" />\\n` +\r\n                        `<feOffset in=\"blur\" dx=\"${this.shadowOffsetX}\" dy=\"${this.shadowOffsetY}\" result=\"offsetBlur\" />\\n`;\r\n                    if (this.shadowColor === null) {\r\n                        merge +=\r\n                            `<feMergeNode in=\"offsetBlur\" />`;\r\n                    } else {\r\n                        const c = new WebColor(this.shadowColor);\r\n                        content +=\r\n                            `<feColorMatrix in=\"offsetBlur\" type=\"matrix\" values=\"` +\r\n                            ` 1 1 1 0 0 ` +\r\n                            ` 1 1 1 0 0 ` +\r\n                            ` 1 1 1 0 0 ` +\r\n                            ` 0 0 0 1 0 \" result=\"color1\" />\\n` +\r\n                            `<feColorMatrix in=\"color1\" type=\"matrix\" values=\"` +\r\n                            ` ${c.r / 255} 0 0 0 0 ` +\r\n                            ` 0 ${c.g / 255} 0 0 0 ` +\r\n                            ` 0 0 ${c.b / 255} 0 0 ` +\r\n                            ` 0 0 0 ${c.a} 0 \" result=\"color2\" />\\n`;\r\n                        merge +=\r\n                            `<feMergeNode in=\"color2\" />\\n`;\r\n                    }\r\n                }\r\n                if (this.globalCompositeOperation && this.globalCompositeOperation !== \"source-over\") {\r\n                    let op = this.globalCompositeOperation;\r\n                    let reverse = false;\r\n                    switch (op) {\r\n                        case \"destination-in\":\r\n                            reverse = true;\r\n                        case \"source-in\":\r\n                            op = \"in\";\r\n                            break;\r\n                        case \"destination-out\":\r\n                            reverse = true;\r\n                        case \"source-out\":\r\n                            op = \"out\";\r\n                            break;\r\n                        case \"destination-atop\":\r\n                            reverse = true;\r\n                        case \"source-atop\":\r\n                            op = \"atop\";\r\n                            break;\r\n                        case \"xor\":\r\n                            op = \"xor\";\r\n                            break;\r\n                        case \"destination-over\":\r\n                            reverse = true;\r\n                        default: // lighter|copy|arithmetic\r\n                            op = \"over\";\r\n                            break;\r\n                    }\r\n                    content +=\r\n                        `<feComposite in${reverse ? \"2\" : \"\"}=\"SourceGraphic\" ` +\r\n                        `in${reverse ? \"\" : \"2\"}=\"BackgroundImage\" operator=\"${op}\" result=\"comp\"/>\\n`;\r\n                    merge   += `<feMergeNode in=\"comp\" />\\n`;\r\n                } else {\r\n                    merge   += `<feMergeNode in=\"SourceGraphic\" />\\n`;\r\n                }\r\n\r\n                this.assets.push(\r\n                    `<filter id=\"filter-${++this.idCount}\" filterUnits=\"userSpaceOnUse\">\\n` +\r\n                    `${content}<feMerge>\\n${merge}</feMerge>\\n</filter>`);\r\n\r\n                this.filterIdUrl = `url(#filter-${this.idCount})`;\r\n                return `filter=\"${this.filterIdUrl}\" `;\r\n            } else {\r\n                this.filterIdUrl = \"\";\r\n            }\r\n        } else if (this.filterIdUrl !== \"\") {\r\n            return `filter=\"${this.filterIdUrl}\" `;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    protected getMultilineTextHeight(c: SvgTextAttributes) {\r\n        // NOTE: Inherited classes can adjust the value of `lineHeight` (adjust argument and call super).\r\n        if ((c.multiline) &&\r\n            typeof this.font === 'string' &&\r\n            (c.lineHeight === void 0 || c.lineHeight === null)) {\r\n\r\n            const re = new RegExp(\r\n                '^\\\\s*(?:normal|italic|oblique)?\\s*' +\r\n                '(?:normal|small-caps)?\\\\s*' +\r\n                '(?:normal|bold|lighter|bolder|100|200|300|400|500|600|700|800|900)??\\\\s*' +\r\n                '(?:([0-9.]+)(px|pt|mm|cm|in|pc)?)(?:\\\\/(?:([0-9.]+|normal)(px|pt|mm|cm|in|em|%)?))?');\r\n\r\n            const x = re.exec(this.font);\r\n            if (x) {\r\n                // px\r\n                let fontSizePx = Number(x[1]);\r\n                switch (x[2]) {\r\n                    case 'pt':\r\n                        // 1pt === 1/72in === (1/72)*96px\r\n                        fontSizePx = (fontSizePx / 72.0) * 96.0;\r\n                        break;\r\n                    case 'pc':\r\n                        fontSizePx = (fontSizePx / 72.0) * 96.0 / 12.0;\r\n                        break;\r\n                    case 'mm':\r\n                        // 1mm === 1/25.4in === (1/25.4)*96px\r\n                        fontSizePx = (fontSizePx / 25.4) * 96.0;\r\n                        break;\r\n                    case 'cm':\r\n                        fontSizePx = (fontSizePx / 25.4) * 96.0 * 100.0;\r\n                        break;\r\n                    case 'in':\r\n                        // 1in === 96px\r\n                        fontSizePx = fontSizePx * 96.0;\r\n                        break;\r\n                }\r\n\r\n                let lineHeight = fontSizePx;\r\n                if (x[3]) {\r\n                    lineHeight = Number(x[3]) || 1.3;\r\n                    switch (x[4]) {\r\n                        case 'px':\r\n                            break;\r\n                        case 'pt':\r\n                            // 1pt === 1/72in === (1/72)*96px\r\n                            lineHeight = (lineHeight / 72.0) * 96.0;\r\n                            break;\r\n                        case 'pc':\r\n                            lineHeight = (lineHeight / 72.0) * 96.0 / 12.0;\r\n                            break;\r\n                        case 'mm':\r\n                            // 1mm === 1/25.4in === (1/25.4)*96px\r\n                            lineHeight = (lineHeight / 25.4) * 96.0;\r\n                            break;\r\n                        case 'cm':\r\n                            lineHeight = (lineHeight / 25.4) * 96.0 * 100.0;\r\n                            break;\r\n                        case 'in':\r\n                            // 1in === 96px\r\n                            lineHeight = lineHeight * 96.0;\r\n                            break;\r\n                        case '%':\r\n                            lineHeight = lineHeight / 100 * fontSizePx;\r\n                            break;\r\n                        default:\r\n                            lineHeight = lineHeight * fontSizePx;\r\n                            break;\r\n                    }\r\n                }\r\n                c.lineHeight = lineHeight;\r\n            }\r\n        }\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @returns CSS font properties styles for Text tag.\r\n     */\r\n    protected getTextFontStyles() {\r\n        // NOTE: issue #1: CairoSVG, Inkscape, and some libraries can't understand `font` shorthand style property.\r\n        //                 (Inkscape (v0.92.4) may understand partly)\r\n        //       Inherited classes can split `font` property to `font-family`, `font-weight`, `font-size`, ...\r\n        return `font:${Escape.xml(this.font)};`;\r\n    }\r\n\r\n    protected getTextAttributes(maxWidthOrExtraAttrs: number | SvgTextAttributes | null | undefined): string {\r\n        // NOTE: Firefox and Inkscape will render text justified if `textLength` is set.\r\n        //       Chromium and Safari don't justify in this case.\r\n        //       This is due to the  difference of `SVG: <text textLength>` and `Canvas: fillText(,,,maxWidth)`.\r\n        //       Inherited classes can adjust the value of `textLength` (adjust argument and call super).\r\n        let textAlign: TextAlignValue;\r\n        switch (this.textAlign) {\r\n        case \"left\":\r\n            textAlign = \"start\";\r\n            break;\r\n        case \"right\":\r\n            textAlign = \"end\";\r\n            break;\r\n        case \"center\":\r\n            textAlign = \"middle\";\r\n            break;\r\n        default:\r\n            textAlign = this.textAlign;\r\n            break;\r\n        }\r\n\r\n        let textBaseline: TextBaselineValue;\r\n        switch (this.textBaseline) {\r\n        case \"top\":\r\n            textBaseline = \"text-before-edge\";\r\n            break;\r\n        case \"bottom\":\r\n            textBaseline = \"text-after-edge\";\r\n            break;\r\n        default:\r\n            textBaseline = this.textBaseline;\r\n            break;\r\n        }\r\n\r\n        let a = ` style=\"${this.getTextFontStyles()}\" text-anchor=\"${textAlign}\" dominant-baseline=\"${textBaseline}\"`;\r\n\r\n        if (maxWidthOrExtraAttrs === void 0 || maxWidthOrExtraAttrs === null) {\r\n            return a;\r\n        } else if (typeof maxWidthOrExtraAttrs === \"number\") {\r\n            a += ` textLength=\"${maxWidthOrExtraAttrs}\"`;\r\n            return a;\r\n        }\r\n\r\n        const c = this.getMultilineTextHeight(maxWidthOrExtraAttrs);\r\n\r\n        if (c.textLength                 !== void 0 && c.textLength                 !== null) a += ` textLength=\"${c.textLength}\"`;\r\n        if (c.lengthAdjust               !== void 0 && c.lengthAdjust               !== null) a += ` lengthAdjust=\"${c.lengthAdjust}\"`;\r\n        if (c.rotate                     !== void 0 && c.rotate                     !== null) a += ` rotate=\"${c.rotate}\"`;\r\n        if (c.writingMode                !== void 0 && c.writingMode                !== null) a += ` writing-mode=\"${c.writingMode}\"`;\r\n        if (c.glyphOrientationVertical   !== void 0 && c.glyphOrientationVertical   !== null) a += ` glyph-orientation-vertical=\"${c.glyphOrientationVertical}\"`;\r\n        if (c.glyphOrientationHorizontal !== void 0 && c.glyphOrientationHorizontal !== null) a += ` glyph-orientation-horizontal=\"${c.glyphOrientationHorizontal}\"`;\r\n        if (c.direction                  !== void 0 && c.direction                  !== null) a += ` direction=\"${c.direction}\"`;\r\n        if (c.unicodeBidi                !== void 0 && c.unicodeBidi                !== null) a += ` unicode-bidi=\"${c.unicodeBidi}\"`;\r\n        if (c.textDecoration             !== void 0 && c.textDecoration             !== null) a += ` text-decoration=\"${c.textDecoration}\"`;\r\n        if (c.kerning                    !== void 0 && c.kerning                    !== null) a += ` kerning=\"${c.kerning}\"`;\r\n        if (c.letterSpacing              !== void 0 && c.letterSpacing              !== null) a += ` letter-spacing=\"${c.letterSpacing}\"`;\r\n        if (c.wordSpacing                !== void 0 && c.wordSpacing                !== null) a += ` word-spacing=\"${c.wordSpacing}\"`;\r\n\r\n        return a;\r\n    }\r\n    private getTextPath(maxWidthOrExtraAttrs: number | SvgTextAttributes | null | undefined): {id: string, offset?: number} | null {\r\n        if (maxWidthOrExtraAttrs !== void 0 && maxWidthOrExtraAttrs !== null && typeof maxWidthOrExtraAttrs === \"object\") {\r\n            if (maxWidthOrExtraAttrs.textPath) {\r\n                const inv = this.ctm.getInverse();\r\n                const subpath: Array<string | number | Point2D> = [];\r\n                for (const v of this.subpath) {\r\n                    if (v instanceof Point2D) {\r\n                        subpath.push(inv.transfer(v));\r\n                    } else {\r\n                        subpath.push(v);\r\n                    }\r\n                }\r\n\r\n                const id = `path-${++this.idCount}`;\r\n                this.assets.push(`<path id=\"${id}\" d=\"${WordWrap.loose(subpath.join(\" \"))}\" />\\n`);\r\n                this.subpath = [];\r\n                this.currentPoint = null;\r\n                this.currentPointOnCtm = null;\r\n\r\n                const r: {id: string, offset?: number} = {id: `#${id}`};\r\n\r\n                if (maxWidthOrExtraAttrs.textPathOffset !== void 0 && maxWidthOrExtraAttrs.textPathOffset !== null) {\r\n                    r.offset = maxWidthOrExtraAttrs.textPathOffset;\r\n                }\r\n                return r;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    private convertToMultiline(text: string, x: number, y: number, maxWidthOrExtraAttrs: number | SvgTextAttributes | null | undefined): string {\r\n        if (maxWidthOrExtraAttrs !== void 0 && maxWidthOrExtraAttrs !== null && typeof maxWidthOrExtraAttrs === \"object\") {\r\n            if (maxWidthOrExtraAttrs.multiline && !maxWidthOrExtraAttrs.textPath) {\r\n                const h = maxWidthOrExtraAttrs.lineHeight || 12;\r\n                const s = text.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\r\n                const a = Escape.xml(s).split(\"\\n\");\r\n                switch (maxWidthOrExtraAttrs.writingMode) {\r\n                    case \"tb\": case \"tb-rl\":\r\n                        return `<tspan>${a.join(`</tspan><tspan dx=\"${-h}\" y=\"${y}\">`)}</tspan>`;\r\n                    default:\r\n                        return `<tspan>${a.join(`</tspan><tspan x=\"${x}\" dy=\"${h}\">`)}</tspan>`;\r\n                }\r\n            }\r\n        }\r\n        return `<tspan x=\"${x}\" y=\"${y}\">${Escape.xml(text)}</tspan>`;\r\n    }\r\n\r\n    public stroke(): void {\r\n        this.content +=\r\n            `<g ${this.getStrokeAttrs()}fill=\"none\"${this.getFilterAttrs()}` +\r\n            (this.clipPath.length > 0 ? ` clip-path=\"${this.clipPath}\" ` : \"\") +\r\n            `>\\n<path d=\"${WordWrap.loose(this.subpath.join(\" \"))}\" />\\n</g>\\n`;\r\n    }\r\n    public strokeRect(x: number, y: number, w: number, h: number): void {\r\n        this.content +=\r\n            `<g ${this.getStrokeAttrs()}fill=\"none\"${this.getFilterAttrs()}` +\r\n            (this.clipPath.length > 0 ? ` clip-path=\"${this.clipPath}\" ` : \"\") +\r\n            `>\\n<rect x=\"${x}\" y=\"${y}\" width=\"${w}\" height=\"${h}\" ` +\r\n            `transform=\"matrix(${this.ctm.toString()})\" ` +\r\n            \"/></g>\\n\";\r\n    }\r\n    public strokeText(text: string, x: number, y: number, maxWidthOrExtraAttrs?: number | SvgTextAttributes): void {\r\n        const path = this.getTextPath(maxWidthOrExtraAttrs);\r\n        this.content +=\r\n            `<g ${this.getStrokeAttrs()}fill=\"none\"${this.getFilterAttrs()}` +\r\n            (this.clipPath.length > 0 ? ` clip-path=\"${this.clipPath}\" ` : \"\") +\r\n            `>\\n<text` +\r\n            `${this.getTextAttributes(maxWidthOrExtraAttrs)} transform=\"matrix(${this.ctm.toString()})\" ` +\r\n            `\\n>${path !== null ? `<textPath xlink:href=\"${path.id}\"${path.offset !== void 0 ? ` startOffset=\"${path.offset}\"` : \"\"}\\n>` : \"\"}` +\r\n            this.convertToMultiline(text, x, y, maxWidthOrExtraAttrs) +\r\n            `${path !== null ? \"</textPath>\" : \"\"}</text></g>\\n`;\r\n    }\r\n\r\n    /**\r\n     * fillRule: nonzero|evenodd\r\n     */\r\n    public fill(fillRule: string = \"nonzero\"): void {\r\n        this.content +=\r\n            `<g stroke=\"none\" ${this.getFillAttrs(fillRule)}${this.getFilterAttrs()}` +\r\n            (this.clipPath.length > 0 ? ` clip-path=\"${this.clipPath}\" ` : \"\") +\r\n            `>\\n<path d=\"${WordWrap.loose(this.subpath.join(\" \"))}\" />\\n</g>\\n`;\r\n    }\r\n    public fillRect(x: number, y: number, w: number, h: number): void {\r\n        this.content +=\r\n            `<g stroke=\"none\" ${this.getFillAttrs(\"nonzero\")}${this.getFilterAttrs()}` +\r\n            (this.clipPath.length > 0 ? ` clip-path=\"${this.clipPath}\" ` : \"\") +\r\n            `>\\n<rect x=\"${x}\" y=\"${y}\" width=\"${w}\" height=\"${h}\" ` +\r\n            `transform=\"matrix(${this.ctm.toString()})\" ` +\r\n            \"/></g>\\n\";\r\n    }\r\n    public fillText(text: string, x: number, y: number, maxWidthOrExtraAttrs?: number | SvgTextAttributes): void {\r\n        const path = this.getTextPath(maxWidthOrExtraAttrs);\r\n        this.content +=\r\n            `<g stroke=\"none\" ${this.getFillAttrs(\"nonzero\")}${this.getFilterAttrs()}` +\r\n            (this.clipPath.length > 0 ? ` clip-path=\"${this.clipPath}\" ` : \"\") +\r\n            `>\\n<text` +\r\n            `${this.getTextAttributes(maxWidthOrExtraAttrs)} transform=\"matrix(${this.ctm.toString()})\" ` +\r\n            `\\n>${path !== null ? `<textPath xlink:href=\"${path.id}\"${path.offset !== void 0 ? ` startOffset=\"${path.offset}\"` : \"\"}\\n>` : \"\"}` +\r\n            this.convertToMultiline(text, x, y, maxWidthOrExtraAttrs) +\r\n            `${path !== null ? \"</textPath>\" : \"\"}</text></g>\\n`;\r\n    }\r\n\r\n    /**\r\n     * fillRule: nonzero|evenodd\r\n     */\r\n    public fillStroke(fillRule: string = \"nonzero\"): void {\r\n        this.content +=\r\n            `<g ${this.getFillAttrs(fillRule)}${this.getStrokeAttrs()}${this.getFilterAttrs()}` +\r\n            (this.clipPath.length > 0 ? ` clip-path=\"${this.clipPath}\" ` : \"\") +\r\n            `>\\n<path d=\"${WordWrap.loose(this.subpath.join(\" \"))}\" />\\n</g>\\n`;\r\n    }\r\n    public fillStrokeRect(x: number, y: number, w: number, h: number): void {\r\n        this.content +=\r\n            `<g ${this.getFillAttrs(\"nonzero\")}${this.getStrokeAttrs()}${this.getFilterAttrs()}` +\r\n            (this.clipPath.length > 0 ? ` clip-path=\"${this.clipPath}\" ` : \"\") +\r\n            `>\\n<rect x=\"${x}\" y=\"${y}\" width=\"${w}\" height=\"${h}\" ` +\r\n            `transform=\"matrix(${this.ctm.toString()})\" ` +\r\n            \"/></g>\\n\";\r\n    }\r\n    public fillStrokeText(text: string, x: number, y: number, maxWidthOrExtraAttrs?: number | SvgTextAttributes): void {\r\n        const path = this.getTextPath(maxWidthOrExtraAttrs);\r\n        this.content +=\r\n            `<g ${this.getFillAttrs(\"nonzero\")}${this.getStrokeAttrs()}${this.getFilterAttrs()}` +\r\n            (this.clipPath.length > 0 ? ` clip-path=\"${this.clipPath}\" ` : \"\") +\r\n            `>\\n<text` +\r\n            `${this.getTextAttributes(maxWidthOrExtraAttrs)} transform=\"matrix(${this.ctm.toString()})\" ` +\r\n            `\\n>${path !== null ? `<textPath xlink:href=\"${path.id}\"${path.offset !== void 0 ? ` startOffset=\"${path.offset}\"` : \"\"}\\n>` : \"\"}` +\r\n            this.convertToMultiline(text, x, y, maxWidthOrExtraAttrs) +\r\n            `${path !== null ? \"</textPath>\" : \"\"}</text></g>\\n`;\r\n    }\r\n\r\n    public getLineDash(): number[] {\r\n        return this.lineDash;\r\n    }\r\n    public setLineDash(segments: number[]): void {\r\n        this.lineDash = segments;\r\n    }\r\n\r\n    /**\r\n     * fillRule: nonzero|evenodd\r\n     */\r\n    public clip(fillRule: string = \"nonzero\"): void {\r\n        const a =\r\n            `<clipPath id=\"clip-${++this.idCount}\" fill-rule=\"${fillRule}\" >` +\r\n            `<path d=\"${WordWrap.loose(this.subpath.join(\" \"))}\" /></clipPath>`;\r\n        this.assets.push(a);\r\n        this.clipPath = `url(#clip-${this.idCount})`;\r\n    }\r\n\r\n    public registerImage(imageData: HTMLImageElement | HTMLCanvasElement | SvgCanvasImageData, id?: string): string {\r\n        const img = imageData = this.convertImageToSvgImageData(imageData);\r\n        const imgId = (id === null || id === void 0) ? `img-${++this.idCount}_w${img.width}_h${img.height}` : id;\r\n        const a =\r\n            `<image id=\"${imgId}\" \\n` +\r\n            `x=\"${0}\" y=\"${0}\" width=\"${1}\" height=\"${1}\" ` +\r\n            `preserveAspectRatio=\"none\" ` +\r\n            `xlink:href=\"${img.url}\" />`;\r\n        this.assets.push(a);\r\n        return `#${imgId}`;\r\n    }\r\n\r\n    public registerCustomFilter(id: string, markup: string): void {\r\n        this.assets.push(markup);\r\n        this.filterIdUrl = `url(#${id})`;\r\n    }\r\n\r\n    public registerCustomAsset(markup: string | SvgCanvas2DAsset): void {\r\n        this.assets.push(markup);\r\n    }\r\n    public appendCustomContent(markup: string): void {\r\n        this.content += `<g transform=\"matrix(${this.ctm.toString()})\">${markup}</g>\\n`;\r\n    }\r\n\r\n    public createLinearGradient(x0: number, y0: number, x1: number, y1: number): SvgCanvas2DLinerGradient {\r\n        const a = new SvgCanvas2DLinerGradient(`lgrad-${++this.idCount}`, x0, y0, x1, y1);\r\n        this.assets.push(a);\r\n        return a;\r\n    }\r\n    /** fr is ignored. fr is always 0. */\r\n    public createRadialGradient(cx: number, cy: number, r: number, fx: number, fy: number, fr?: number): SvgCanvas2DRadialGradient {\r\n        const a = new SvgCanvas2DRadialGradient(`rgrad-${++this.idCount}`, cx, cy, r, fx, fy);\r\n        this.assets.push(a);\r\n        return a;\r\n    }\r\n\r\n    public createPattern(imageData: HTMLImageElement | HTMLCanvasElement | SvgCanvasImageData, repetition?: string): SvgCanvas2DPattern {\r\n        const a = new SvgCanvas2DPattern(`pat-${++this.idCount}`, this.convertImageToSvgImageData(imageData));\r\n        this.assets.push(a);\r\n        return a;\r\n    }\r\n    public beginPattern(): void {\r\n        this.contentSaved = this.content;\r\n        this.content = \"\";\r\n        const s = new SvgCanvasGraphicState();\r\n        this.graphicsStack.push(s);\r\n    }\r\n    public endPattern(x: number, y: number, width: number, height: number): string {\r\n        const id = ++this.idCount;\r\n        const a =\r\n            `<pattern id=\"pat-${id}\" patternUnits=\"userSpaceOnUse\" patternContentUnits=\"userSpaceOnUse\" ` +\r\n            `x=\"${x}\" y=\"${y}\" width=\"${width}\" height=\"${height}\">\\n${this.content}</pattern>`;\r\n        this.assets.push(a);\r\n        this.content = this.contentSaved;\r\n        this.contentSaved = \"\";\r\n        this.restore();\r\n        return `url(#pat-${id})`;\r\n    }\r\n\r\n    private convertImageToSvgImageData(imageData: HTMLImageElement | HTMLCanvasElement | SvgCanvasImageData): SvgCanvasImageData {\r\n        let img: SvgCanvasImageData;\r\n        if (typeof HTMLImageElement !== \"undefined\" && imageData instanceof HTMLImageElement) {\r\n            const c = document.createElement(\"canvas\");\r\n            c.width = imageData.width;\r\n            c.height = imageData.height;\r\n            const ctx = c.getContext(\"2d\");\r\n            if (ctx === null) {\r\n                throw new Error(\"SvgCanvas#convertImageToSvgImageData: Can't get context from Canvas.\");\r\n            }\r\n            ctx.drawImage(imageData, 0, 0);\r\n            img = new SvgCanvasImageData(c.toDataURL(), 0, 0, c.width, c.height);\r\n        } else if (typeof HTMLCanvasElement !== \"undefined\" && imageData instanceof HTMLCanvasElement) {\r\n            img = new SvgCanvasImageData(imageData.toDataURL(), 0, 0, imageData.width, imageData.height);\r\n        } else {\r\n            img = imageData as SvgCanvasImageData;\r\n        }\r\n        return img;\r\n    }\r\n\r\n    public drawImage(imageData: HTMLImageElement | HTMLCanvasElement | SvgCanvasImageData | string,\r\n                     canvasOffsetX: number, canvasOffsetY: number,\r\n                     canvasImageWidth: number, canvasImageHeight: number): void {\r\n        let img: SvgCanvasImageData;\r\n        if (typeof imageData === \"string\")\r\n            img = new SvgCanvasImageData(imageData, 0, 0, canvasImageWidth, canvasImageHeight);\r\n        else\r\n            img = this.convertImageToSvgImageData(imageData);\r\n\r\n        if (img.url.startsWith(\"#\")) {\r\n            const tm = this.ctm.translate(canvasOffsetX, canvasOffsetY).scale(canvasImageWidth, canvasImageHeight);\r\n            this.content +=\r\n                `<g><use x=\"0\" y=\"0\" ` +\r\n                `transform=\"matrix(${tm.toString()})\" ` +\r\n                `\\nxlink:href=\"${img.url}\" /></g>\\n`;\r\n        } else {\r\n            this.content +=\r\n                `<g><image x=\"${canvasOffsetX}\" y=\"${canvasOffsetY}\" ` +\r\n                `width=\"${canvasImageWidth}\" height=\"${canvasImageHeight}\" ` +\r\n                `preserveAspectRatio=\"none\" ` +\r\n                `transform=\"matrix(${this.ctm.toString()})\" ` +\r\n                `\\nxlink:href=\"${img.url}\" /></g>\\n`;\r\n        }\r\n    }\r\n\r\n    public beginGroup(): void {\r\n        this.content += \"<g>\";\r\n    }\r\n    public endGroup(): void {\r\n        this.content += \"</g>\";\r\n    }\r\n\r\n\r\n    // tslint:disable-next-line:variable-name\r\n    private _fontHeightRatio = 1.25;\r\n    public get fontHeightRatio(): number {\r\n        return this._fontHeightRatio;\r\n    }\r\n    public set fontHeightRatio(value: number) {\r\n        this._fontHeightRatio = value;\r\n    }\r\n    public measureText(text: string): { width: number; } {\r\n        const re = this.font.match(/(\\d+(?:.\\d+)?)(px|pt|in|mm|em|rem|%)/);\r\n        let scale = 1;\r\n        let size = 12;\r\n        if (re) {\r\n            // 96px === 1in (not 72px === 1in)\r\n            // 72pt === 1in\r\n            //  1mm === 1/25.4in\r\n            switch (re[2]) {\r\n            case \"pt\": // pt -> px\r\n                scale = 96 / 72;\r\n                break;\r\n            case \"in\": // in -> px\r\n                scale = 96;\r\n                break;\r\n            case \"mm\": // mm -> px\r\n                scale = 96 * (1 / 25.4);\r\n                break;\r\n            case \"em\": case \"rem\":\r\n                scale = 12;\r\n                break;\r\n            case \"%\":\r\n                scale = 1 / 100;\r\n                break;\r\n            }\r\n            size = Number.parseFloat(re[1]);\r\n        }\r\n        return { width: Math.round(scale * size * Array.from(text\r\n            .replace(/[\\u200B-\\u200D\\uFEFF\\u200E\\u200F]/g, '')\r\n            .normalize('NFKC')).length / this.fontHeightRatio)\r\n        };\r\n    }\r\n\r\n    public clearRect(x: number, y: number, w: number, h: number): void {\r\n        this.save();\r\n        this.fillStyle = 'white';\r\n        this.fillRect(x, y, w, h);\r\n        this.restore();\r\n    }\r\n}\r\n","// Copyright (c) 2017, Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\n/**\r\n * Base64 encoder / decoder.\r\n */\r\nexport class Base64 {\r\n\r\n    /**\r\n     * Base64 encoder.\r\n     * @param message Plaintext message.\r\n     * @param lineLength The maximum line length of the encoded message. If set, the encoded message is split with a newline character.\r\n     * @return Base64 encoded message.\r\n     */\r\n    public static encode(message: ArrayLike<number>, lineLength?: number): string {\r\n        // A-Z: 0x00 -> 0x41\r\n        // a-z: 0x1a -> 0x61\r\n        // 0-9: 0x34 -> 0x30\r\n        //   +: 0x3e -> 0x2b\r\n        //   /: 0x3f -> 0x2f\r\n\r\n        // 0-5/6-3/4-8\r\n        let buf: number[] = [];\r\n        const n = message.length;\r\n        let   v = 0, q = 0, r = 0;\r\n\r\n        for (let i = 0, m = 0; i < n; i++) {\r\n            m = i % 3;\r\n            if (m === 0) {\r\n                v = message[i];\r\n                r = (v <<  4) & 0x30;  // 2bit\r\n                v = (v >>> 2) & 0x3f; // 6bit\r\n            }\r\n            else if (m === 1) {\r\n                v = message[i];\r\n                q =  (v <<  2) & 0x3c;        // 4bit\r\n                v = ((v >>> 4) & 0x0f) | r; // 4bit\r\n                r = q;\r\n            }\r\n            else {\r\n                q = message[i];\r\n                v = ((q >>> 6) & 0x03) | r; // 2bit\r\n                if      (v < 0x1a) v += 0x41;\r\n                else if (v < 0x34) v += 0x47;\r\n                else if (v < 0x3e) v -= 0x04;\r\n                else if (v < 0x3f) v  = 0x2b;\r\n                else               v  = 0x2f;\r\n                buf.push(v);\r\n                v = q & 0x3f; // 6bit\r\n            }\r\n            if      (v < 0x1a) v += 0x41;\r\n            else if (v < 0x34) v += 0x47;\r\n            else if (v < 0x3e) v -= 0x04;\r\n            else if (v < 0x3f) v  = 0x2b;\r\n            else               v  = 0x2f;\r\n            buf.push(v);\r\n        }\r\n\r\n        if (n % 3) {\r\n            if      (r < 0x1a) r += 0x41;\r\n            else if (r < 0x34) r += 0x47;\r\n            else if (r < 0x3e) r -= 0x04;\r\n            else if (r < 0x3f) r  = 0x2b;\r\n            else               r  = 0x2f;\r\n            buf.push(r);\r\n        }\r\n\r\n        while (buf.length % 4) {\r\n            buf.push(0x3d);\r\n        }\r\n\r\n        if (lineLength && 0 < lineLength) {\r\n            const s: number[] = [];\r\n            for (let i = 0; i < buf.length; i += lineLength) {\r\n                s.push(...buf.slice(i, i + lineLength), 0x0a);\r\n            }\r\n            buf = s;\r\n        }\r\n\r\n        let z = \"\";\r\n\r\n        for (let i = 0; i < buf.length; i++) {\r\n            // NOTE: spread operator (...buf) causes stack overflow.\r\n            z += String.fromCharCode(buf[i]);\r\n        }\r\n        return z;\r\n    }\r\n\r\n    /**\r\n     * Base64 decoder.\r\n     * @param message Base64 encoded message.\r\n     * @return Plaintext message.\r\n     */\r\n    public static decode(message: string): number[] {\r\n        const buf: number[] = [];\r\n        let   i = 0, m = 0, s = 0;\r\n        const n = message.length;\r\n        let   v = 0, r = 0;\r\n\r\n        for (; i < n; i++) {\r\n            m = (i + s) % 4;\r\n            v = message.charCodeAt(i);\r\n            if      (0x41 <= v && v <= 0x5a) v -= 0x41;\r\n            else if (0x61 <= v && v <= 0x7a) v -= 0x47;\r\n            else if (0x30 <= v && v <= 0x39) v += 0x04;\r\n            else if (v === 0x2b)             v  = 0x3e;\r\n            else if (v === 0x2f)             v  = 0x3f;\r\n            else if (v === 0x3d) {\r\n                break;\r\n            } else {\r\n                s++;\r\n                continue;\r\n            }\r\n            if (m === 0) {\r\n                r = (v << 2) & 0xfc; // 6bit\r\n            }\r\n            else if (m === 1) {\r\n                buf.push(r | ((v >>> 4) & 0x03)); // 2bit\r\n                r = (v << 4) & 0xf0; // 4bit\r\n            }\r\n            else if (m === 2) {\r\n                buf.push(r | ((v >>> 2) & 0x0f)); // 4bit\r\n                r = (v << 6) & 0xc0; // 2bit\r\n            }\r\n            else {\r\n                buf.push(r | (v & 0x3f)); // 6bit\r\n            }\r\n        }\r\n        return buf;\r\n    }\r\n\r\n}\r\n","import { SvgCanvas,\n         Rect2D,\n         SvgCanvas2DGradient } from 'red-agate-svg-canvas/modules';\n\n// tslint:disable-next-line:function-constructor\nconst g = Function('return this')();\n\nexport default function(ChartJs, opts)\n{\n    // SvgCanvas has a \"CanvasRenderingContext2D\"-compatible interface.\n    const ctx = new SvgCanvas();\n\n    // SvgCanvas lacks the canvas property.\n    ctx.canvas = {\n        width: 800,\n        height: 400,\n        style: {\n            width: '800px',\n            height: '400px',\n        },\n    };\n\n    //TypeError: ctx.resetTransform is not a function\n    ctx.resetTransform = function(){}\n\n    // SvgCanvas does not have font glyph information,\n    // so manually set the ratio of (font height / font width).\n    ctx.fontHeightRatio = 2;\n\n    // Chart.js needs a \"HTMLCanvasElement\"-like interface that has \"getContext()\" method.\n    // \"getContext()\" should returns a \"CanvasRenderingContext2D\"-compatible interface.\n    const el = { getContext: () => ctx };\n\n    if(undefined === opts.options)\n        opts.options = {};\n\n    // If \"devicePixelRatio\" is not set, Chart.js get the devicePixelRatio from \"window\" object.\n    // node.js environment has no window object.\n    opts.options.devicePixelRatio = 1;\n\n    // Disable animations.\n    opts.options.animation = false;\n    opts.options.events = [];\n    opts.options.responsive = false;\n\n    // Chart.js needs the \"CanvasGradient\" in the global scope.\n    const savedGradient = g.CanvasGradient;\n    g.CanvasGradient = SvgCanvas2DGradient;\n    try {\n        const chart = new ChartJs.Chart(el, opts);\n    } finally {\n        if (savedGradient) {\n            g.CanvasGradient = savedGradient;\n        }\n    }\n\n    // Render as SVG.\n    const svgString = ctx.render(new Rect2D(0, 0 , 800, 400), 'px');\n    \n    return svgString;\n}\n\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","TextEncoding","str","__encodeToUtf8","buf","__decodeUtf8","n","length","i","c","idx","byteLength","bytes","Uint8Array","cp","codePointAt","Error","_bytes","set","subarray","out","len","char2","char3","char4","String","fromCodePoint","isNode","Buffer","isTextEncoder","TextEncoder","from","Array","isArray","toString","utf8Encoder","encode","utfDecoder","TextDecoder","decode","__encodeToUtf8Impl","__decodeUtf8Impl","Escape","s","replace","WordWrap","charsPerLine","r","indexOf","loose","WebColor","constructor","name_or_code","_r","_g","_b","_a","rgba","g","b","a","c2","cutoff255","cutoff1","hsla","hslToRgb","h","l","isCode","isName","isRgb","isHsl","this","x","match","endsWith","Math","round","Number","parseFloat","parseInt","colorNames","has","m1","m2","hueToRgb","gray","toRgbaString","toCode","slice","toRgbString","toHsla","max","min","toHslString","toHslaString","Map","dp","v","toFixed","toPrecision","decimalPlaces","Point2D","y","Vector2D","p1","p2","isZero","getLength","sqrt","getAngle","angle","acos","PI","v1","v2","vlen1","vlen2","Rect2D","w","TransferMatrix2D","m11_or_src","m12","m21","m22","dx","dy","m11","isIdentity","scale","concat","translate","rotate","cos","sin","skewX","tan","skewY","mat","transfer","x_or_p","getInverse","SvgCanvasImageData","url","width","height","SvgCanvas2DGradient","SvgCanvas2DLinerGradient","id","x0","y0","x1","y1","super","content","addColorStop","offset","color","opacity","toDef","SvgCanvas2DRadialGradient","cx","cy","fx","fy","SvgCanvas2DPattern","imageData","SvgCanvasGraphicState","src","globalAlpha","globalCompositeOperation","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","filterIdUrl","font","textAlign","textBaseline","lineCap","lineDashOffset","lineJoin","lineWidth","miterLimit","strokeStyle","fillStyle","ctm","currentPoint","currentPointOnCtm","subpath","lineDash","clipPath","SvgCanvas","graphicsStack","assets","contentSaved","idCount","template","_fontHeightRatio","push","subpathIsEmptyOrClosed","Date","getTime","render","viewbox","unit","svgns","xlinkns","vbox","defs","map","join","tmpl","re","test","toDataUrl","lineLength","message","q","m","z","fromCharCode","charCodeAt","encodeToUtf8","save","restore","restorePath","pop","cpt","cptoctm","tm","transform","setTransform","beginPath","closePath","moveTo","p","lineTo","extra","quadraticCurveTo","cpx","cpy","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","arc","radius","startAngle","endAngle","anticlockwise","entired","abs","PI_2","k0","tm0","points","k1","reverse","pt","shift","arcTo","x2","y2","p0","fromPoints","arcAngle","linesAngle","vang1","vang2","cp1","cp2","center","vcp1","vcp2","angcp1","angcp2","circle","rect","roundRect","getInheritedStyle","style","found","styleStr","alpha","getStrokeAttrs","styleAndAlpha","getLineDash","getFillAttrs","fillRule","getFilterAttrs","merge","op","getMultilineTextHeight","multiline","lineHeight","RegExp","exec","fontSizePx","getTextFontStyles","xml","getTextAttributes","maxWidthOrExtraAttrs","textLength","lengthAdjust","writingMode","glyphOrientationVertical","glyphOrientationHorizontal","direction","unicodeBidi","textDecoration","kerning","letterSpacing","wordSpacing","getTextPath","textPath","inv","textPathOffset","convertToMultiline","text","split","stroke","strokeRect","strokeText","path","fill","fillRect","fillText","fillStroke","fillStrokeRect","fillStrokeText","setLineDash","segments","clip","registerImage","img","convertImageToSvgImageData","imgId","registerCustomFilter","markup","registerCustomAsset","appendCustomContent","createLinearGradient","createRadialGradient","fr","createPattern","repetition","beginPattern","endPattern","HTMLImageElement","document","createElement","ctx","getContext","drawImage","toDataURL","HTMLCanvasElement","canvasOffsetX","canvasOffsetY","canvasImageWidth","canvasImageHeight","startsWith","beginGroup","endGroup","fontHeightRatio","measureText","size","normalize","clearRect","Function","ChartJs","opts","canvas","resetTransform","el","undefined","options","devicePixelRatio","animation","events","responsive","savedGradient","CanvasGradient","Chart"],"sourceRoot":""}